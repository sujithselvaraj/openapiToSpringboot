openapi: 3.0.3
info:
  title: Smoke Suite
  version: 1.0.0
  contact: {}
servers:
  - url: 'localhost:8080'

paths:
  /realms/{tenantId}/protocol/openid-connect/token:
    post:
      tags:
        - Authorization
      summary: Access Token
      description: This section describes how to procure an access token for authorization using the client credentials as a grant type.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/definitions/ClientCredentials'
                - $ref: '#/definitions/Password'
                - $ref: '#/definitions/RefreshToken'
                - $ref: '#/definitions/AuthorizationCode'


      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The newly created authorization token.
                  expires_in:
                    type: number
                    description: Validity of the access token in seconds.
                  not-before-policy:
                    type: number
                    description: not-before policy ensures that any tokens issued before that time become invalid.
                  refresh_expires_in:
                    type: number
                    description:   Validity of the refresh token in seconds.
                  refresh_token:
                    type: string
                    description: The new refresh token.
                  scope:
                    type: string
                    description: The scope requested for the token.
                  session_state:
                    type: string
                    description:  Basically session_state value is used to monitor end user sessions.
                  token_type:
                    type: string
                    description: Indicates access token type.
        '400':
          description:   Unsupported grant type
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error which indicates the issue.
                  error_description:
                    type: string
                    description: The error message which indicates the issue.
        '404':
          description: Realm doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Realm doesn't exist
                    description: The error message which indicates the issue.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials or Invalid user credentials).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_grant
                    description: The error which indicates the issue.
                  error_description:
                    type: string
                    example:  HTTP 401 Unauthorized
                    description: The error message which indicates the issue.



    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.

  /realms/{tenantId}/v4_realm/:
    get:
      tags:
        - Tenant
      summary: List Tenants
      description: Use this API to return the list of tenants along with their details.
      responses:
        '200':
          description: Tenant list fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant list fetched successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: test
                        type:
                          type: string
                          example: AST
                        enabled:
                          type: boolean
                        rememberMe:
                          type: boolean
                        resetPassword:
                          type: boolean
                        registrationAllowed:
                          type: boolean
                        adminUsername:
                          type: string
                          example: 123
                        userCount:
                          type: number
                          example: 3
                        realmCreationStatus:
                          type: string
                          example: BLOCKED

        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Tenant name should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get tenantCaused by null
                    description: Message explains result of the API call
                  status:
                    type: string
                    example: GENERAL ERROR
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
    post:
      tags:
        - Tenant
      summary: Create tenant
      description: Tenant are entities that can request IDP to authenticate a user. It also use IDP to encrypt themselves and provide a single sign-on solution which can securely invoke other services over the network. Access this API to create a new tenant.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                realm:
                  type: string
                  example: qwerty
                enabled:
                  type: boolean
                loginTheme:
                  type: string
                  example: kobilv2
                accountTheme:
                  type: string
                  example: kobilv2
                adminTheme:
                  type: string
                  example: kobilv2
                emailTheme:
                  type: string
                  example: kobilv2
                adminUsername:
                  type: string
                  example: admin
                adminEmail:
                  type: string
                  example: user123@gmail.com
                adminPassword:
                  type: string
                  example: Admin@123
                adminFirstName:
                  type: string
                  example:
                adminLastName:
                  type: string
                  example:
                bruteForceProtected:
                  type: boolean
                actionTokenGeneratedByAdminLifespan:
                  type: number
                  example: 86400
                settings:
                  type: object
                  properties:
                    UserProperty:
                      type: string
                      example: id
                requiredActions:
                  type: array
                  items:
                    type: object
                    properties:
                      alias:
                        type: string
                        example: kobil-reg-status-required-action
                      name:
                        type: string
                        example: KOBIL Registration Status Verification
                      providerId:
                        type: string
                        example: kobil-reg-status-required-action
                      enabled:
                        type: boolean
                      priority:
                        type: number
                        example: 1001
      responses:
        '200':
          description: Tenant created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant created successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
                  data:
                    type: object
                    properties:
                      tenantName:
                        type: string
                        example: qwerty
                      emailId:
                        type: string
                        example: user123@gmail.com
                      tenantUrl:
                        type: string
                        example: master.idp.local
                      appId:
                        type: string
                        example: digitanium-app
                      appSecret:
                        type: string
                        example: 6ac9becb-1f68-4358-907f-9bb36d6d103c

        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Tenant name should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Caused By Tenant name should not be null or empty
                    description: Message explains result of the API call
                  status:
                    type: string
                    example: GENERAL ERROR
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '409':
          description: Tenant already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant already exists
                    description: Message explains result of the API call
                  status:
                    type: string
                    example: CONFLICT
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
  /realms/{tenantId}/v4_realm/{realmId}:
    get:
      tags:
        - Tenant
      summary: Get Tenant Info
      description: Get Tenant Info API is used to get the details about the tenant.
      responses:
        '200':
          description: Tenant info fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant info fetched successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 093a8134-12aa-40b7-a164-fa808ccbf84e
                      realm:
                        type: string
                        example: test
                      notBefore:
                        type: number
                        example: 0
                      defaultSignatureAlgorithm:
                        type: string
                        example: RS256
                      revokeRefreshToken:
                        type: boolean
                      refreshTokenMaxReuse:
                        type: number
                        example: 0
                      accessTokenLifespan:
                        type: number
                        example: 1800
                      accessTokenLifespanForImplicitFlow:
                        type: number
                        example: 900
                      ssoSessionIdleTimeout:
                        type: number
                        example: 1800
                      ssoSessionMaxLifespan:
                        type: number
                        example: 36000
                      ssoSessionIdleTimeoutRememberMe:
                        type: number
                        example: 0
                      ssoSessionMaxLifespanRememberMe:
                        type: number
                        example: 0
                      offlineSessionIdleTimeout:
                        type: number
                        example: 2592000
                      offlineSessionMaxLifespanEnabled:
                        type: boolean
                      offlineSessionMaxLifespan:
                        type: number
                        example: 5184000
                      clientSessionIdleTimeout:
                        type: number
                        example: 0
                      clientSessionMaxLifespan:
                        type: number
                        example: 0
                      clientOfflineSessionIdleTimeout:
                        type: number
                        example: 0
                      clientOfflineSessionMaxLifespan:
                        type: number
                        example: 0
                      accessCodeLifespan:
                        type: number
                        example: 60
                      accessCodeLifespanUserAction:
                        type: number
                        example: 300
                      accessCodeLifespanLogin:
                        type: number
                        example: 1800
                      actionTokenGeneratedByAdminLifespan:
                        type: number
                        example: 43200
                      actionTokenGeneratedByUserLifespan:
                        type: number
                        example: 300
                      oauth2DeviceCodeLifespan:
                        type: number
                        example: 600
                      oauth2DevicePollingInterval:
                        type: number
                        example: 5
                      enabled:
                        type: boolean
                      sslRequired:
                        type: string
                        example: external
                      registrationAllowed:
                        type: boolean
                      registrationEmailAsUsername:
                        type: boolean
                      rememberMe:
                        type: boolean
                      verifyEmail:
                        type: boolean
                      loginWithEmailAllowed:
                        type: boolean
                      duplicateEmailsAllowed:
                        type: boolean
                      resetPasswordAllowed:
                        type: boolean
                      editUsernameAllowed:
                        type: boolean
                      bruteForceProtected:
                        type: boolean
                      permanentLockout:
                        type: boolean
                      maxFailureWaitSeconds:
                        type: number
                        example: 900
                      minimumQuickLoginWaitSeconds:
                        type: number
                        example: 60
                      waitIncrementSeconds:
                        type: number
                        example: 60
                      quickLoginCheckMilliSeconds:
                        type: number
                        example: 1000
                      maxDeltaTimeSeconds:
                        type: number
                        example: 43200
                      failureFactor:
                        type: number
                        example: 30
                      defaultRole:
                        type: object
                        properties:
                          id:
                            type: string
                            example: e4a5735b-0677-48a1-bf5c-8aa30aa1846a
                          name:
                            type: string
                            example: default-roles-test
                          description:
                            type: string
                            example: $role_default-roles
                          composite:
                            type: boolean
                          clientRole:
                            type: boolean
                          containerId:
                            type: string
                            example: 093a8134-12aa-40b7-a164-fa808ccbf84e
                      requiredCredentials:
                        type: array
                        items:
                          type: object
                        example: [
                          password
                        ]
                      otpPolicyType:
                        type: string
                        example: totp
                      otpPolicyAlgorithm:
                        type: string
                        example: HmacSHA1
                      otpPolicyInitialCounter:
                        type: number
                        example: 0
                      otpPolicyDigits:
                        type: number
                        example: 6
                      otpPolicyLookAheadWindow:
                        type: number
                        example: 1
                      otpPolicyPeriod:
                        type: number
                        example: 30
                      webAuthnPolicyRpEntityName:
                        type: string
                        example: keycloak
                      webAuthnPolicySignatureAlgorithms:
                        type: array
                        items:
                          type: object
                        example: [
                          ES256
                        ]
                      webAuthnPolicyRpId:
                        type: string
                        example:
                      webAuthnPolicyAttestationConveyancePreference:
                        type: string
                        example: not specified
                      webAuthnPolicyAuthenticatorAttachment:
                        type: string
                        example: not specified
                      webAuthnPolicyRequireResidentKey:
                        type: string
                        example: not specified
                      webAuthnPolicyUserVerificationRequirement:
                        type: string
                        example: not specified
                      webAuthnPolicyCreateTimeout:
                        type: number
                        example: 0
                      webAuthnPolicyAvoidSameAuthenticatorRegister:
                        type: boolean
                      webAuthnPolicyAcceptableAaguids:
                        type: array
                        items:
                          type: object
                        example: []
                      webAuthnPolicyPasswordlessRpEntityName:
                        type: string
                        example: keycloak
                      webAuthnPolicyPasswordlessSignatureAlgorithms:
                        type: array
                        items:
                          type: object
                        example: [
                          ES256
                        ]
                      webAuthnPolicyPasswordlessRpId:
                        type: string
                        example:
                      webAuthnPolicyPasswordlessAttestationConveyancePreference:
                        type: string
                        example: not specified
                      webAuthnPolicyPasswordlessAuthenticatorAttachment:
                        type: string
                        example: not specified
                      webAuthnPolicyPasswordlessRequireResidentKey:
                        type: string
                        example: not specified
                      webAuthnPolicyPasswordlessUserVerificationRequirement:
                        type: string
                        example: not specified
                      webAuthnPolicyPasswordlessCreateTimeout:
                        type: number
                        example: 0
                      webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister:
                        type: boolean
                      webAuthnPolicyPasswordlessAcceptableAaguids:
                        type: array
                        items:
                          type: object
                        example: []
                      browserSecurityHeaders:
                        type: object
                        properties:
                          contentSecurityPolicyReportOnly:
                            type: string
                            example:
                          xContentTypeOptions:
                            type: string
                            example: nosniff
                          referrerPolicy:
                            type: string
                            example: no-referrer
                          xRobotsTag:
                            type: string
                            example: none
                          xFrameOptions:
                            type: string
                            example: SAMEORIGIN
                          contentSecurityPolicy:
                            type: string
                            example: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
                          xXSSProtection:
                            type: string
                            example: 1; mode=block
                          strictTransportSecurity:
                            type: string
                            example: max-age=31536000; includeSubDomains
                      smtpServer:
                        type: object
                        properties:
                          replyToDisplayName:
                            type: string
                            example: Support
                          starttls:
                            type: string
                            example: true
                          auth:
                            type: string
                            example: true
                          envelopeFrom:
                            type: string
                            example:
                          ssl:
                            type: string
                            example: false
                          password:
                            type: string
                            example: AEV+d3P.n9Wr-aR
                          port:
                            type: string
                            example: 587
                          host:
                            type: string
                            example: mail2.kobil.com
                          replyTo:
                            type: string
                            example: admin@midentitybox.com
                          from:
                            type: string
                            example: admin@midentitybox.com
                          fromDisplayName:
                            type: string
                            example: mIDentity Dashboard
                          user:
                            type: string
                            example: admin.midentitybox
                      eventsEnabled:
                        type: boolean
                      eventsListeners:
                        type: array
                        items:
                          type: object
                        example: [
                          SEND_RESET_PASSWORD
                            UPDATE_CONSENT_ERROR
                            CUSTOM_REQUIRED_ACTION
                            OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR
                            USER_DISABLED_BY_PERMANENT_LOCKOUT
                            IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR
                            CLIENT_INITIATED_ACCOUNT_LINKING_ERROR
                        ]
                      adminEventsEnabled:
                        type: boolean
                      adminEventsDetailsEnabled:
                        type: boolean
                      identityProviders:
                        type: array
                        items:
                          type: object
                        example: []
                      identityProviderMappers:
                        type: array
                        items:
                          type: object
                        example: []
                      internationalizationEnabled:
                        type: boolean
                      supportedLocales:
                        type: array
                        items:
                          type: object
                        example: []
                      requiredActions:
                        type: array
                        items:
                          type: object
                          properties:
                            alias:
                              type: string
                              example: CONFIGURE_TOTP
                            name:
                              type: string
                              example: Configure OTP
                            providerId:
                              type: string
                              example: CONFIGURE_TOTP
                            enabled:
                              type: boolean
                            defaultAction:
                              type: boolean
                            priority:
                              type: number
                              example: 10
                            config:
                              type: object
                      browserFlow:
                        type: string
                        example: browser
                      registrationFlow:
                        type: string
                        example: registration
                      directGrantFlow:
                        type: string
                        example: direct grant
                      resetCredentialsFlow:
                        type: string
                        example: reset credentials
                      clientAuthenticationFlow:
                        type: string
                        example: clients
                      dockerAuthenticationFlow:
                        type: string
                        example: docker auth
                      attributes:
                        type: object
                        properties:
                          cibaBackchannelTokenDeliveryMode:
                            type: string
                            example: poll
                          cibaAuthRequestedUserHint:
                            type: string
                            example: login_hint
                          oauth2DevicePollingInterval:
                            type: string
                            example: 5
                          clientOfflineSessionMaxLifespan:
                            type: string
                            example: 0
                          clientSessionIdleTimeout:
                            type: string
                            example: 0
                          actionTokenGeneratedByUserLifespan-execute-actions:
                            type: string
                            example:
                          actionTokenGeneratedByUserLifespan-verify-email:
                            type: string
                            example:
                          clientOfflineSessionIdleTimeout:
                            type: string
                            example: 0
                          actionTokenGeneratedByUserLifespan-reset-credentials:
                            type: string
                            example:
                          otpMaxDeltaTimeSeconds:
                            type: string
                            example: 0
                          realmReusableOtpCode:
                            type: string
                            example: false
                          cibaInterval:
                            type: string
                            example: 5
                          cibaExpiresIn:
                            type: string
                            example: 120
                          oauth2DeviceCodeLifespan:
                            type: string
                            example: 600
                          actionTokenGeneratedByUserLifespan-idp-verify-account-via-email:
                            type: string
                            example:
                          otpFailureFactor:
                            type: string
                            example: 1
                          otpWaitIncrementSeconds:
                            type: string
                            example: 0
                          clientSessionMaxLifespan:
                            type: string
                            example: 0
                          parRequestUriLifespan:
                            type: string
                            example: 60
                          adminEventsExpiration:
                            type: string
                            example:
                          shortVerificationUri:
                            type: string
                            example:
                          otpBruteForceProtected:
                            type: string
                            example: true
                      userManagedAccessAllowed:
                        type: boolean
                      enableMtan:
                        type: boolean
                      adminEmailVerified:
                        type: boolean
                      adminStatus:
                        type: boolean
                      settings:
                        type: object
                        properties:
                          webAuthnPolicyAttestationConveyancePreferencePasswordless:
                            type: string
                            example: not specified
                          webAuthnPolicyRequireResidentKeyPasswordless:
                            type: string
                            example: not specified
                          webAuthnPolicyAuthenticatorAttachmentPasswordless:
                            type: string
                            example: not specified
                          actionTokenGeneratedByUserLifespan:
                            type: string
                            example: 300
                          webAuthnPolicySignatureAlgorithms:
                            type: string
                            example: ES256
                          webAuthnPolicyRpEntityNamePasswordless:
                            type: string
                            example: keycloak
                          offlineSessionMaxLifespan:
                            type: string
                            example: 5184000
                          _browser_header.contentSecurityPolicyReportOnly:
                            type: string
                            example:
                          _browser_header.contentSecurityPolicy:
                            type: string
                            example: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
                          webAuthnPolicyUserVerificationRequirement:
                            type: string
                            example: not specified
                          quickLoginCheckMilliSeconds:
                            type: string
                            example: 1000
                          webAuthnPolicyCreateTimeout:
                            type: string
                            example: 0
                          minimumQuickLoginWaitSeconds:
                            type: string
                            example: 60
                          defaultSignatureAlgorithm:
                            type: string
                            example: RS256
                          webAuthnPolicyUserVerificationRequirementPasswordless:
                            type: string
                            example: not specified
                          _browser_header.xContentTypeOptions:
                            type: string
                            example: nosniff
                          waitIncrementSeconds:
                            type: string
                            example: 60
                          offlineSessionMaxLifespanEnabled:
                            type: string
                            example: false
                          client-policies.profiles:
                            type: string
                            example: profiles:[]
                          webAuthnPolicyAuthenticatorAttachment:
                            type: string
                            example: not specified
                          _browser_header.xRobotsTag:
                            type: string
                            example: none
                          webAuthnPolicySignatureAlgorithmsPasswordless:
                            type: string
                            example: ES256
                          webAuthnPolicyRpEntityName:
                            type: string
                            example: keycloak
                          webAuthnPolicyAvoidSameAuthenticatorRegisterPasswordless:
                            type: string
                            example: false
                          failureFactor:
                            type: string
                            example: 30
                          maxDeltaTimeSeconds:
                            type: string
                            example: 43200
                          bruteForceProtected:
                            type: string
                            example: false
                          webAuthnPolicyRpIdPasswordless:
                            type: string
                            example:
                          _browser_header.xXSSProtection:
                            type: string
                            example: 1; mode=block
                          _browser_header.xFrameOptions:
                            type: string
                            example: SAMEORIGIN
                          _browser_header.strictTransportSecurity:
                            type: string
                            example: max-age=31536000; includeSubDomains
                          permanentLockout:
                            type: string
                            example: false
                          webAuthnPolicyRequireResidentKey:
                            type: string
                            example: not specified
                          webAuthnPolicyRpId:
                            type: string
                            example:
                          webAuthnPolicyAttestationConveyancePreference:
                            type: string
                            example: not specified
                          _browser_header.referrerPolicy:
                            type: string
                            example: no-referrer
                          maxFailureWaitSeconds:
                            type: string
                            example: 900
                          webAuthnPolicyCreateTimeoutPasswordless:
                            type: string
                            example: 0
                          webAuthnPolicyAvoidSameAuthenticatorRegister:
                            type: string
                            example: false
                          client-policies.policies:
                            type: string
                            example: policies:[]
                          actionTokenGeneratedByAdminLifespan:
                            type: string
                            example: 43200
                      userCount:
                        type: number
                        example: 3
                      realmCreationStatus:
                        type: string
                        example: BLOCKED
                      disabledComponents:
                        type: string
                        example:
                      adminUserCreatedTimestamp:
                        type: number
                        example: 0
                      adminUserEnabled:
                        type: boolean
                      clientProfiles:
                        type: object
                        properties:
                          profiles:
                            type: array
                            items:
                              type: object
                            example: []
                      clientPolicies:
                        type: object
                        properties:
                          policies:
                            type: array
                            items:
                              type: object
                            example: []
        '404':
          description: Tenant does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant does not exist
                    description:   Message explains result of the API call.
                  status:
                    type: string
                    example: TENANT_NOT_FOUND
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description:  The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example:   HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
      security:
        - BearerAuth: []
    parameters:
      - name: realmId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
    delete:
      tags:
        - Tenant
      summary: Delete Tenant
      description: Delete Tenant is used to delete a tenant, which was created using Create Tenant.
      responses:
        '200':
          description: Tenant deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant deleted successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: Tenant does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant does not exist
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: TENANT_NOT_FOUND
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
                    example: Failed to delete master tenant

      security:
        - BearerAuth: []
    put:
      tags:
        - Tenant
      summary: Update Tenant
      description: Update Tenant is used to update the tenant, which was created using Create Tenant.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                loginTheme:
                  type: string
                  example: kobilv2
                accountTheme:
                  type: string
                  example: kobilv2
                adminTheme:
                  type: string
                  example: kobilv2
                emailTheme:
                  type: string
                  example: kobilv2
                adminUsername:
                  type: string
                  example: admin
                adminEmail:
                  type: string
                  example: user123@gmail.com
                adminPassword:
                  type: string
                  example: Admin@123
                adminFirstName:
                  type: string
                  example:
                adminLastName:
                  type: string
                  example:
                bruteForceProtected:
                  type: boolean
                actionTokenGeneratedByAdminLifespan:
                  type: number
                  example: 86400
                settings:
                  type: object
                  properties:
                    UserProperty:
                      type: string
                      example: id
                requiredActions:
                  type: array
                  items:
                    type: object
                    properties:
                      alias:
                        type: string
                        example: kobil-reg-status-required-action
                      name:
                        type: string
                        example: KOBIL Registration Status Verification
                      providerId:
                        type: string
                        example: kobil-reg-status-required-action
                      enabled:
                        type: boolean
                      priority:
                        type: number
                        example: 1001
      responses:
        '200':
          description: Tenant updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant updated successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Realm doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Caused by null
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: GENERAL ERROR
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
  /realms/{tenantId}/v3_realm/settings:
    get:
      tags:
        - Tenant
      summary: Get Tenant Settings
      description: Using this API, we can fetch the details about the tenant settings.
      responses:
        '200':
          description: Tenant setting(s) fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant setting(s) fetched successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
                  data:
                    type: object
                    properties:
                      cibaBackchannelTokenDeliveryMode:
                        type: string
                        example: poll
                      webAuthnPolicyAttestationConveyancePreferencePasswordless:
                        type: string
                        example: not specified
                      webAuthnPolicyRequireResidentKeyPasswordless:
                        type: string
                        example: not specified
                      clientOfflineSessionIdleTimeout:
                        type: string
                        example: 0
                      cibaExpiresIn:
                        type: string
                        example: 120
                      webAuthnPolicyAuthenticatorAttachmentPasswordless:
                        type: string
                        example: not specified
                      actionTokenGeneratedByUserLifespan:
                        type: string
                        example: 300
                      actionTokenGeneratedByUserLifespan-idp-verify-account-via-email:
                        type: string
                        example:
                      webAuthnPolicySignatureAlgorithms:
                        type: string
                        example: ES256
                      webAuthnPolicyRpEntityNamePasswordless:
                        type: string
                        example: keycloak
                      offlineSessionMaxLifespan:
                        type: string
                        example: 5184000
                      shortVerificationUri:
                        type: string
                        example:
                      _browser_header.contentSecurityPolicyReportOnly:
                        type: string
                        example:
                      _browser_header.contentSecurityPolicy:
                        type: string
                        example: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
                      cibaAuthRequestedUserHint:
                        type: string
                        example: login_hint
                      webAuthnPolicyUserVerificationRequirement:
                        type: string
                        example: not specified
                      clientSessionIdleTimeout:
                        type: string
                        example: 0
                      quickLoginCheckMilliSeconds:
                        type: string
                        example: 1000
                      webAuthnPolicyCreateTimeout:
                        type: string
                        example: 0
                      actionTokenGeneratedByUserLifespan-reset-credentials:
                        type: string
                        example:
                      minimumQuickLoginWaitSeconds:
                        type: string
                        example: 60
                      realmReusableOtpCode:
                        type: string
                        example: false
                      defaultSignatureAlgorithm:
                        type: string
                        example: RS256
                      webAuthnPolicyUserVerificationRequirementPasswordless:
                        type: string
                        example: not specified
                      clientSessionMaxLifespan:
                        type: string
                        example: 0
                      _browser_header.xContentTypeOptions:
                        type: string
                        example: nosniff
                      waitIncrementSeconds:
                        type: string
                        example: 60
                      offlineSessionMaxLifespanEnabled:
                        type: string
                        example: false
                      client-policies.profiles:
                        type: string
                        example: profiles:[]
                      actionTokenGeneratedByUserLifespan-execute-actions:
                        type: string
                        example:
                      actionTokenGeneratedByUserLifespan-verify-email:
                        type: string
                        example:
                      displayName:
                        type: string
                        example: Keycloak
                      webAuthnPolicyAuthenticatorAttachment:
                        type: string
                        example: not specified
                      _browser_header.xRobotsTag:
                        type: string
                        example: none
                      webAuthnPolicySignatureAlgorithmsPasswordless:
                        type: string
                        example: ES256
                      displayNameHtml:
                        type: string
                        example: <div class=kc-logo-text><span>Keycloak</span></div>
                      webAuthnPolicyRpEntityName:
                        type: string
                        example: keycloak
                      webAuthnPolicyAvoidSameAuthenticatorRegisterPasswordless:
                        type: string
                        example: false
                      failureFactor:
                        type: string
                        example: 30
                      maxDeltaTimeSeconds:
                        type: string
                        example: 43200
                      bruteForceProtected:
                        type: string
                        example: false
                      webAuthnPolicyRpIdPasswordless:
                        type: string
                        example:
                      _browser_header.xXSSProtection:
                        type: string
                        example: 1; mode=block
                      _browser_header.xFrameOptions:
                        type: string
                        example: SAMEORIGIN
                      _browser_header.strictTransportSecurity:
                        type: string
                        example: max-age=31536000; includeSubDomains
                      oauth2DevicePollingInterval:
                        type: string
                        example: 5
                      clientOfflineSessionMaxLifespan:
                        type: string
                        example: 0
                      permanentLockout:
                        type: string
                        example: false
                      webAuthnPolicyRequireResidentKey:
                        type: string
                        example: not specified
                      webAuthnPolicyRpId:
                        type: string
                        example:
                      webAuthnPolicyAttestationConveyancePreference:
                        type: string
                        example: not specified
                      _browser_header.referrerPolicy:
                        type: string
                        example: no-referrer
                      maxFailureWaitSeconds:
                        type: string
                        example: 900
                      cibaInterval:
                        type: string
                        example: 5
                      oauth2DeviceCodeLifespan:
                        type: string
                        example: 600
                      webAuthnPolicyCreateTimeoutPasswordless:
                        type: string
                        example: 0
                      webAuthnPolicyAvoidSameAuthenticatorRegister:
                        type: string
                        example: false
                      parRequestUriLifespan:
                        type: string
                        example: 60
                      client-policies.policies:
                        type: string
                        example: policies:[]
                      actionTokenGeneratedByAdminLifespan:
                        type: string
                        example: 43200
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: Tenant does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant setting(s) not found
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: NOT_FOUND
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
    post:
      tags:
        - Tenant
      summary: Update Tenant Settings
      description: Using this API, we can add/update the realm settings.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: string
                  example: 'true'
                  description: If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
      responses:
        '200':
          description: Tenant settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant settings updated successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description:   The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '500':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant settings update failed
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: BAD_REQUEST
                    description:   The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
      security:
        - BearerAuth: []
    delete:
      tags:
        - Tenant
      summary: Delete Tenant Settings
      description: Use the Delete Tenant Settings API to delete the realm settings in a particular realm.
      parameters:
        - name: key
          in: query
          schema:
            type: string
            example:
            description: provide the settings name which needs to be deleted.
      responses:
        '200':
          description: Tenant setting deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant setting deleted
                    description:   Message explains result of the API call.
                  status:
                    type: string
                    example: Success
                    description:   The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Tenant setting(s) not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant setting(s) not found
                    description:   Message explains result of the API call.
                  status:
                    type: string
                    example: BAD_REQUEST
                    description:   The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
  /realms/{tenantId}/v4_realm/appsettings:
    put:
      tags:
        - Tenant
      summary: Update App Settings
      description: The Update App Settings API will update the app settings details which is configured in the realm settings.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                flutter_android_build_number:
                  type: string
                  example: '000'
                  description: flutter_android_build_number is the number of android releases for a version. (Every build has its own unique number)
                flutter_android_link:
                  type: string
                  example: https://google.com
                  description: flutter_android_link is the URL for the playstore.
                flutter_android_update_by:
                  type: string
                  example: 30.07.2023
                  description: flutter_android_update_by results the timestamp of the last update.
                flutter_android_version:
                  type: string
                  example: 2.5.5
                  description: flutter_android_version is the result of the andriod version.
                flutter_ios_build_number:
                  type: string
                  example: '000'
                  description: flutter_ios_build_number is the number of ios releases for a version. (Every build has its own unique number)
                flutter_ios_link:
                  type: string
                  example: https://google.com
                  description: flutter_ios_link is the URL for the appstore.
                flutter_ios_update_by:
                  type: string
                  example: 30.07.2023
                  description: flutter_ios_update_by results the timestamp of the last update.
                flutter_ios_version:
                  type: string
                  example: 2.5.5
                  description: flutter_ios_version is the result of the ios version.
                macos_build_number:
                  type: string
                  example: ''
                  description: macos_build_number is the number of macos releases for a version. (Every build has its own unique number).
                macos_link:
                  type: string
                  example: ''
                  description: macos_link is the URL for the playstore.
                macos_update_by:
                  type: string
                  example: ''
                  description: macos_update_by results the timestamp of the last update.
                macos_version:
                  type: string
                  example: ''
                  description: macos_version is the result of the macos version.
                windows_build_number:
                  type: string
                  example: ''
                  description: windows_build_number is the number of windows releases for a version. (Every build has its own unique number)
                windows_link:
                  type: string
                  example: ''
                  description: windows_link is the URL for the playstore.
                windows_update_by:
                  type: string
                  example: ''
                  description: windows_update_by results the timestamp of the last update.
                windows_version:
                  type: string
                  example: ''
                  description: windows_version is the result of the windows version.
      responses:
        '200':
          description: Tenant updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant settings updated successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.

      security:
        - BearerAuth: []
    get:
      tags:
        - Tenant
      summary: Get App Settings
      description: The Get App settings API will fetch the app settings details which is configured in the realm settings.
      responses:
        '200':
          description: Tenant setting(s) fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tenant setting(s) fetched successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
                  data:
                    type: object
                    properties:
                      flutter_ios_version:
                        type: string
                        example: 2.5.5
                      flutter_android_link:
                        type: string
                        example: https://google.com
                      macos_link:
                        type: string
                        example:
                      huawei_update_by:
                        type: string
                        example:
                      huawei_build_number:
                        type: string
                        example:
                      macos_version:
                        type: string
                        example:
                      huawei_version:
                        type: string
                        example:
                      windows_link:
                        type: string
                        example:
                      windows_version:
                        type: string
                        example:
                      macos_build_number:
                        type: string
                        example:
                      flutter_ios_build_number:
                        type: string
                        example: 000
                      huawei_link:
                        type: string
                        example:
                      flutter_android_version:
                        type: string
                        example: 2.5.5
                      flutter_android_update_by:
                        type: string
                        example: 30.07.2023
                      flutter_ios_update_by:
                        type: string
                        example: 30.07.2023
                      windows_update_by:
                        type: string
                        example:
                      flutter_ios_link:
                        type: string
                        example: https://google.com
                      macos_update_by:
                        type: string
                        example:
                      flutter_android_build_number:
                        type: string
                        example: 000
                      windows_build_number:
                        type: string
                        example:
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v4_realm/status:
    get:
      tags:
        - Tenant
      summary: Get Realm Creation Status
      description: The Get Realm Creation Status API that will fetch the status of the Realm created.
      responses:
        '200':
          description: Fetched the realm creation status.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/GetRealmCreationStatusOkResponse1'
                  - $ref: '#/definitions/GetRealmCreationStatusOkResponse2'
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_role/{roleName}:
    post:
      tags:
        - Tenant
      summary: Add Realm Role
      description: A New realm specific role can be created using this API.
      responses:
        '200':
          description: Role created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Role created successfully
                    description:   Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '409':
          description: Role created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Role already exists
                    description:   Message explains result of the API call.
                  status:
                    type: string
                    example: CONFLICT
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    delete:
      tags:
        - Tenant
      summary: Delete Realm Role
      description: Existing Realm roles can be deleted using this API.
      responses:
        '200':
          description: Role deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Role deleted successfully
                    description:   Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: Role does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ROLE_NOT_FOUND
                    description:   Message explains result of the API call.
                  status:
                    type: string
                    example: NOT_FOUND
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: roleName
        in: path
        required: true
        schema:
          type: string
          description: Configure the Role name.
  # /realms/{tenantId}/v3_realm/status:
  #   get:
  #     tags:
  #       - Tenant
  #     summary: Get Realm Creation Status
  #     description: The Get Realm Creation Status API that will fetch the status of the Realm created.
  #     responses:
  #       '200':
  #         description: Fetched the realm creation status.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: string
  #                   example: BLOCKED
  #                   description: "The consolidated status of realm based on signer and Identity user certificate status. (Other possible status : ACTIVE, BLOCKED, REQUESTED)."
  #                 iamStatus:
  #                   type: string
  #                   example: SUCCESS
  #                   description: It is marked as SUCCESS if the realm is present in the IDP.
  #                 signerCertStatus:
  #                   type: string
  #                   example: BLOCKED
  #                   description: The status of the Signer Certificate creation of the realm.
  #                 identityUserCertStatus:
  #                   type: object
  #                   description: The status of the Signer Certificate creation of the realm.
  #                   properties:
  #                     externalIdentityUser:
  #                       type: object
  #                       description: The status of the External Identity User certificate of the realm.
  #                       properties:
  #                         authentication:
  #                           type: string
  #                           example: BLOCKED
  #                           description: The aunthentication certificate status of the Internal Identity User and External Identity User.
  #                         encryption:
  #                           type: string
  #                           example: BLOCKED
  #                           description: The encryption certificate status of the Internal Identity User and External Identity User.
  #                         signature:
  #                           type: string
  #                           example: BLOCKED
  #                           description: The signature certificate status of the Internal Identity User and External Identity User.
  #                     internalIdentityUser:
  #                       type: object
  #                       description: The status of the Internal Identity User certificate of the realm.
  #                       properties:
  #                         authentication:
  #                           type: string
  #                           example: BLOCKED
  #                           description: The aunthentication certificate status of the Internal Identity User and External Identity User.
  #                         encryption:
  #                           type: string
  #                           example: BLOCKED
  #                           description: The encryption certificate status of the Internal Identity User and External Identity User.
  #                         signature:
  #                           type: string
  #                           example: BLOCKED
  #                           description: The signature certificate status of the Internal Identity User and External Identity User.
  #       '401':
  #         description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                   type: string
  #                   example: HTTP 401 Unauthorized
  #                   description: The error message which indicates the issue.
  #     security:
  #       - BearerAuth: []
  #   parameters:
  #     - name: tenantId
  #       in: path
  #       required: true
  #       schema:
  #         type: string
  #         description: Configure the Realm's name.
  /realms/{tenantId}/kobilriskbits/resources-auth:
    post:
      tags:
        - Riskbits
      summary: Create riskbits
      description: Using this API, riskbits can be added/created as provided in the request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  example: OK
                  description: " Device execution is determined by the risk operation. For instance, if the JBreak[1]40001 is the Risk name of the device in 'Risk Details iOS' is 'HIGH_RISK,'in Operation the device will not be allowed."
                ratingLevel:
                  type: string
                  example: X
                  description: Assessing the Risk Level on the device.
                realmId:
                  type: string
                  example: test
                  description: The "realmId" field serves as an identifier for a specific tenant within a system.
                risk:
                  type: string
                  example: '0.01'
                  description: Rate of the risks.
                riskAndroid:
                  type: string
                  example: JBreak_test
                  description: Android risk name which is present in the device.
                riskIOS:
                  type: string
                  example: JBreak_test
                  description: iOS risk name which is present in the device.
                score:
                  type: string
                  example: 001-003
                  description: Qualitative measure that quantifies the degree of the risk.
      responses:
        '200':
          description: Riskbits added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbits added successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '409':
          description: Riskbit already exists.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/CreateRiskBitsConflictResponse1'
                  - $ref: '#/definitions/CreateRiskBitsConflictResponse2'




      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
    delete:
      tags:
        - Riskbits
      summary: Delete All Riskbits
      description: Using this API, riskbits which are added using Add List of Riskbits will be removed/deleted.
      responses:
        '200':
          description: All Riskbits Deleted Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: All Riskbits Deleted Successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: All Riskbits Deleted Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No riskbits found
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
  /realms/{tenantId}/kobilriskbits/resources-auth/{id}:
    delete:
      tags:
        - Riskbits
      summary: Delete Riskbits
      description: Using this API, riskbits which are added/created using Create Riskbits will be removed/deleted.


      responses:
        '200':
          description: Riskbit Deleted Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbit deleted successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description:  The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: Riskbits ID Not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No riskbits found
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Configure the Riskbit Id.
    get:
      tags:
        - Riskbits
      summary: Get Riskbits
      description: Using this API, will return the list of riskbit details for the riskbitId provided in the request.


      responses:
        '200':
          description: Successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbits fetched successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 1a591860-368c-402a-8449-965787aaed8b
                        ratingLevel:
                          type: string
                          example: A
                        score:
                          type: string
                          example: 986-999
                        risk:
                          type: string
                          example: 0.80%
                        riskAndroid:
                          type: string
                          example:
                        riskIOS:
                          type: string
                          example:
                        operation:
                          type: string
                          example: OK
                        realmId:
                          type: string
                          example: test
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No riskbits found
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: NOT_FOUND
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
  /realms/{tenantId}/kobilriskbits/resources-auth/list:
    post:
      tags:
        - Riskbits
      summary: Add List of Riskbits
      description: Using this API, riskbits can be added in a list as provided in the request.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  operation:
                    type: string
                    example: OK
                    description: Device execution is determined by the risk operation. For instance, if the JBreak[1]40001 is the Risk name of the device in 'Risk Details iOS' is 'HIGH_RISK,'in Operation the device will not be allowed.
                  ratingLevel:
                    type: string
                    example: A
                    description: Assessing the Risk Level on the device.
                  realmId:
                    type: string
                    example: aaiqa
                    description: The "realmId" field serves as an identifier for a specific tenant within a system.
                  risk:
                    type: string
                    example: 0.80%
                    description: Risk name.
                  riskAndroid:
                    type: string
                    example: ''
                    description: The "riskAndroid" field pertains specifically to the name.
                  riskIOS:
                    type: string
                    example: ''
                    description: iOS risk name which is present in the device.
                  score:
                    type: string
                    example: 986-999
                    description: Qualitative measure that quantifies the degree of the risk.
              example:
                - operation: OK
                  ratingLevel: A
                  realmId: aaiqa
                  risk: 0.80%
                  riskAndroid: ''
                  riskIOS: ''
                  score: 986-999
                - operation: OK
                  ratingLevel: B
                  realmId: aaiqa
                  risk: 1.64%
                  riskAndroid: ''
                  riskIOS: ''
                  score: 977-985
                - operation: OK
                  ratingLevel: C
                  realmId: aaiqa
                  risk: 2.47%
                  riskAndroid: ''
                  riskIOS: ''
                  score: 970-976
                - operation: OK
                  ratingLevel: D
                  realmId: aaiqa
                  risk: 3.10%
                  riskAndroid: ''
                  riskIOS: ''
                  score: 962-969
                - operation: OK
                  ratingLevel: E
                  realmId: aaiqa
                  risk: 4.38%
                  riskAndroid: JBreak[1](300)
                  riskIOS: JBreak[400]
                  score: 949-961
                - operation: OK
                  ratingLevel: F
                  realmId: aaiqa
                  risk: 6.21%
                  riskAndroid: Manipulation[2](4),Manipulation[2](35)
                  riskIOS: ''
                  score: 928-948
                - operation: HIGH_RISK
                  ratingLevel: G
                  realmId: aaiqa
                  risk: 9.5%
                  riskAndroid: CodeInjection[6](2),CodeInjection[6](20000)
                  riskIOS: ''
                  score: 877-928
                - operation: HIGH_RISK
                  ratingLevel: H
                  realmId: aaiqa
                  risk: 16.74%
                  riskAndroid: Manipulation[2](9
                  riskIOS: JBreak[400],JBreak[5455],CodeInjection[6][7]
                  score: 800-876
                - operation: HIGH_RISK
                  ratingLevel: I
                  realmId: aaiqa
                  risk: 25.97%
                  riskAndroid: JBreak[1](40001)
                  riskIOS: JBreak[1](15),JBreak[1](101)
                  score: 718-799
                - operation: HIGH_RISK
                  ratingLevel: J
                  realmId: aaiqa
                  risk: 32.56%
                  riskAndroid: Manipulation,MaliciousApp
                  riskIOS: Manipulation,MaliciousApp
                  score: 639-717
                - operation: HIGH_RISK
                  ratingLevel: K
                  realmId: aaiqa
                  risk: 41.77%
                  riskAndroid: Jbreak,Emulator
                  riskIOS: Jbreak,Emulator
                  score: 492-638
                - operation: HIGH_RISK
                  ratingLevel: L
                  realmId: aaiqa
                  risk: 60.45%
                  riskAndroid: CodeInjection
                  riskIOS: CodeInjection
                  score: 1-491
      responses:
        '200':
          description: Riskbits added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbits added successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '409':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbit already exists
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Conflict
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/kobilriskbits/resources-auth/:
    get:
      tags:
        - Riskbits
      summary: Get All Riskbits
      description: Using this API, will return the list of riskbit details.
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbits fetched successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 1a591860-368c-402a-8449-965787aaed8b
                        ratingLevel:
                          type: string
                          example: A
                        score:
                          type: string
                          example: 986-999
                        risk:
                          type: string
                          example: 0.80%
                        riskAndroid:
                          type: string
                          example:
                        riskIOS:
                          type: string
                          example:
                        operation:
                          type: string
                          example: OK
                        realmId:
                          type: string
                          example: test
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No riskbits found
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/kobilriskbits/resources-auth/verify:
    post:
      tags:
        - Riskbits
      summary: Verify Device Risk
      description: Using this API will fetch the device risk.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                platform:
                  type: string
                  example: ios
                riskName:
                  type: string
                  example: JBreak
      responses:
        '200':
          description: Successfully verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbits fetched successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 8eb08bb0-478d-4170-846e-1d7c2ce25c20
                        ratingLevel:
                          type: string
                          example: K
                        score:
                          type: string
                          example: 492-638
                        risk:
                          type: string
                          example: 41.77%
                        riskAndroid:
                          type: string
                          example: JbreakEmulator
                        riskIOS:
                          type: string
                          example: JbreakEmulator
                        operation:
                          type: string
                          example: HIGH_RISK
                        realmId:
                          type: string
                          example: test
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No riskbits found
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/kobilriskbitstatus/resources-auth:
    get:
      tags:
        - Riskbits
      summary: Get Riskbit Status
      description: Using this API, updated/added riskbits details can be fetched.
      responses:
        '200':
          description: Get Riskbit Status -success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbit status fetched successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 165ba6e7-1e4b-4f40-a900-898232cb6b77
                      realmId:
                        type: string
                        example: test
                      enabled:
                        type: boolean
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No riskbits found
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates tenant-related API's.
      security:
        - BearerAuth: []
    post:
      tags:
        - Riskbits
      summary: Add Or Update Riskbit Status
      description: Using this API, riskbit can be updated/added for the provided riskbitId in the request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: true
                  description: If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
                id:
                  type: string
                  example: ef08c996-55e3-40c5-ad2b-6038b4e05921
                  description: Unique identifier for each riskbit, providing a distinct reference for tracking and managing individual instances of risk within a system.
                realmId:
                  type: string
                  example: aaiqa
                  description: The "realmId" field serves as an identifier for a specific tenant within a system.
      responses:
        '200':
          description: Riskbits updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Riskbit status added successfully
                  status:
                    type: string
                    example: OK
                  subSystem:
                    type: number
                    example: 1
        '401':
          description:  The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '409':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to add riskbit status
                  status:
                    type: string
                    example: Conflict
                  subSystem:
                    type: number
                    example: 1
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_user:
    post:
      tags:
        - Users
      summary: Create User
      description: Create User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attributes:
                  type: object
                  description: Key-value pairs representing customizable user attributes.
                  properties:
                    attribute1:
                      type: string
                      example: bob
                      description: Customizable user attribute.
                clientRoles:
                  type: object
                  description: Roles assigned to the user for client actions.
                  properties:
                    realm-management:
                      type: array
                      items:
                        type: string
                      example: [realm-admin,view-users]
                      description : Configure the client roles for which the actions need to be performed by the user.
                credentials:
                  type: array
                  description: User credentials configuration.
                  items:
                    type: object
                    description: Contains the details of the user's credentials.
                    properties:
                      temporary:
                        type: boolean
                        example: false
                        description: Indicates if the credentials are temporary or not.
                      type:
                        type: string
                        example: password
                        description: Type of credential being provided.
                      value:
                        type: string
                        example: Admin@123
                        description: User password.
                email:
                  type: string
                  example: bob.go@gmail.com
                  description: User's email address.
                emailVerified:
                  type: boolean
                  example: true
                  description: Indicates whether the user's email has been verified. True = enabled & False = disabled, defaults to true.
                enabled:
                  type: boolean
                  example: true
                  description: Indicates if the user account is enabled. True = enabled & False = disabled, defaults to true.
                firstName:
                  type: string
                  example: bob
                  description: User's first name.
                groups:
                  type: array
                  items:
                    type: string
                  example: [usergroup,ks]
                  description: Names of user groups the user belongs to.
                lastName:
                  type: string
                  example: s
                  description: User's last name.
                username:
                  type: string
                  example: user
                  description: User's username.
                realmRoles:
                  type: array
                  description: Roles assigned to the user for system actions.
                  items:
                    type: string
                    example: [admin,realm-management]
                    description: Names of roles assigned to the user.
                requiredActions:
                  type: array
                  items:
                    type: string
                  example:
                    - VERIFY_EMAIL
                    - UPDATE_PASSWORD
                  description: Actions required from the user.
      responses:
        '200':
          description: Create User
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User created successfully.
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Create User
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Username should not be null or empty
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: BAD_REQUEST
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related API's.
        '409':
          description: Create User
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to create user
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: User already exist
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_user/{userId}/update:
    put:
      tags:
        - Users
      summary: Update User
      description: Update User
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                credentials:
                  type: array
                  description: User credentials.
                  items:
                    type: object
                    properties:
                      temporary:
                        type: boolean
                        example: false
                        description: Password will set as temporary, when enabled.
                      type:
                        type: string
                        example: password
                        description: Provide the password
                      value:
                        type: string
                        example: Admin@123
                        description: The password for the user.
                clientRoles:
                  type: object
                  description: Configure the client roles for which the actions need to be performed by the user.
                  properties:
                    realm-management:
                      type: array
                      items:
                        type: string
                      example: [realm-admin,view-users]

                      description : Configure the client roles for which the actions need to be performed by the user.
                attributes:
                  type: object
                  description: Key value pair containing the attributes you wanted to update.
                  properties:
                    attribute1:
                      type: string
                      example: attr1
                      description: Key value pair containing the attributes you wanted to update. For example  email.
                email:
                  type: string
                  example: bob@gmail.com
                  description: Email of the user.
                emailVerified:
                  type: boolean
                  example: true
                  description: Indicates whether `emailVerified` is enabled or not. True = enable & False = disable, defaults to true.
                enabled:
                  type: boolean
                  example: true
                  description: Indicates whether the user is enabled or not. True = enable & False = disable, defaults to true.
                firstName:
                  type: string
                  example: bob
                  description: First name of the user.
                lastName:
                  type: string
                  example: S
                  description: Last name of the user.
                realmRoles:
                  type: array
                  description: Configure the realmRoles for which the actions need to be performed by the user.
                  items:
                    type: string
                  example: [admin,realm-management]
                username:
                  type: string
                  example: test
                  description: The username for the user.
                requiredActions:
                  type: array
                  description: Provide the required action.
                  items:
                    type: string
                  example: [VERIFY_EMAIL,UPDATE_PASSWORD]
      responses:
        '200':
          description: Update User
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User updated successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Username should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update userCaused by null
                    description: The error message which indicates the issue.
                  status:
                    type: string
                    example: Bad Request
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related API's.
        '404':
          description: User doesn't found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the User's name.
  /admin/realms/{tenantId}/users/{id}:
    get:
      tags:
        - Users
      summary: Get User By UUID
      description: The Get User with UUID API will return a list showing the user details.
      responses:
        '200':
          description: User details fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: "string"
                    example: "5698e30c-7e33-44ee-9dce-3fa328831e66"
                    description : UUID is a unique identifier of the IDP.
                  createdTimestamp:
                    type: "number"
                    example: 1692020930000
                    description : The timestamp when the user was created.
                  username:
                    type: "string"
                    example: "idp_external_admin"
                    description : Name of the user.
                  enabled:
                    type: "boolean"
                    example: true
                    description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
                  emailVerified:
                    type: "boolean"
                    example: false
                    description : If true, indicates that the user's email ID has been verified; otherwise, unverified.
                  attributes:
                    required:
                      - "NEXT_PASSWORD_ENTRY_PASSWORD_IN"
                      - "LAST_SUCCESSFUL_LOGIN_TIMESTAMP"
                      - "NUMBER_OF_FAILED_ATTEMPTS"
                    description: Based on the requirement, the user attributes can be updated. User can add any customized attribute in form of key value pair.
                    properties:
                      NEXT_PASSWORD_ENTRY_PASSWORD_IN:
                        type: "array"
                        items:
                          type: "string"
                        example:
                          - "N/A"
                        description: Indicates the time remaining until the next password entry is required.
                      LAST_SUCCESSFUL_LOGIN_TIMESTAMP:
                        type: "array"
                        items:
                          type: "string"
                        example:
                          - "1702981123541"
                        description: Records the timestamp of the last successful login attempt.
                      NUMBER_OF_FAILED_ATTEMPTS:
                        type: "array"
                        items:
                          type: "string"
                        example:
                          - "0"
                        description: Counts the number of consecutive failed login attempts.
                  disableableCredentialTypes:
                    type: "array"
                    items:
                      type: string
                    description : Lists the credential types that have been disabled for the user.
                  requiredActions:
                    type: "array"
                    items:
                      type: string
                    description : Lists the actions that need to be performed during the initial login.
                  notBefore:
                    type: "number"
                    example: 0
                    description : Represents the time before which the JWT must not be accepted for processing.
                  access:
                    required:
                      - "manageGroupMembership"
                      - "view"
                      - "mapRoles"
                      - "impersonate"
                      - "manage"
                    properties:
                      manageGroupMembership:
                        type: "boolean"
                        example: true
                        description: Grants the ability to manage group memberships.
                      view:
                        type: "boolean"
                        example: true
                        description: Allows viewing basic user information.
                      mapRoles:
                        type: "boolean"
                        example: true
                        description: Permits mapping roles to the user.
                      impersonate:
                        type: "boolean"
                        example: true
                        description: Enables the ability to impersonate the user.
                      manage:
                        type: "boolean"
                        example: true
                        description: Provides full management rights over the user.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: USER_NOT_FOUND
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Configure the User's.
  /realms/{tenantId}/v3_user/{userId}/profile:
    put:
      tags:
        - Users
      summary: Update profile User
      description: Use this API to update the user profile.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: Foo
                  description : First name of the user.
                lastName:
                  type: string
                  example: Bar
                  description : Last name of the user.
                email:
                  type: string
                  example: tom@bob.com
                  description : Email of the user.
                attributes:
                  type: object
                  description: Key value pair containing the attributes you wanted to update.
                  properties:
                    attribute1:
                      type: string
                      example: value
                      description: Key value pair containing the attributes you wanted to update.
                    attribute2:
                      type: string
                      example: value2
                      description: Key value pair containing the attributes you wanted to update.
                    attribute3:
                      type: string
                      example: value3
                      description : Key value pair containing the attributes you wanted to update.

      responses:
        '200':
          description: User profile updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User profile updated successfully.
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Failed to update user profile.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update profileCaused by null
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '404':
          description: User doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.
  /realms/{tenantId}/v3_client/{clientRole}/{assignedRole}/users:
    get:
      tags:
        - Users
      summary: Get Users Based On Client Role
      description: The Get Users Based On Client Role API returns a list of users who have the specified client role.
      parameters:
        - name: limit
          in: query
          schema:
            type: string
            example: '1'
            description : The maximum number of users to return.
        - name: offset
          in: query
          schema:
            type: string
            example: '1'
            description : The number of users to skip before starting to collect the result set.
        - name: isUserEnabled
          in: query
          schema:
            type: string
            example: 'true'
            description : Specifies whether the user account is active, with `true` indicating the account is activated.
        - name: isEmailVerified
          in: query
          schema:
            type: string
            example: 'false'
            description : Determines if the user is email address has been confirmed. Defaults to false, indicating unverified.
        - name: firstName
          in: query
          schema:
            type: string
            example: grootan
            description : First name of the user.
        - name: lastName
          in: query
          schema:
            type: string
            example: groot
            description : The last name of the user to filter by.
        - name: email
          in: query
          schema:
            type: string
            example: accesstoken@gmail.com
            description : The email of the user to filter by.
        - name: username
          in: query
          schema:
            type: string
            example: accesstoken
            description : The username of the user to filter by.
        - name: orderBy
          in: query
          schema:
            type: string
            example: asc
            description : The order direction of the results, either ascending (asc) or descending (desc).
        - name: orderByKey
          in: query
          schema:
            type: string
            example: username
            description : The field to order the results by, such as firstName, lastName, email, or username.
        - name: genericSearchVal
          in: query
          schema:
            type: string
            example: accesstoken
            description : It is a customized search for first name, last name, email, or username, and if the search is empty, we will consider the firstname, lastname, email, and username parameters, else these four parameters will be ignored.
      responses:
        '200':
          description: Users fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      page:
                        type: object
                        properties:
                          currentPage:
                            type: number
                            example: 1
                          pageSize:
                            type: number
                            example: 1
                          totalPages:
                            type: number
                            example: 2
                          totalRecords:
                            type: number
                            example: 2
                      userList:
                        type: array
                        items:
                          type: object
                          properties:
                            admin:
                              type: boolean
                              example: false
                            attributes:
                              type: object
                              properties:
                                LAST_SUCCESSFUL_LOGIN_TIMESTAMP:
                                  type: array
                                  items:
                                    type: string
                                    example: '1702967761737'
                                  example:
                                    - '1702967761737'
                                NEXT_PASSWORD_ENTRY_PASSWORD_IN:
                                  type: array
                                  items:
                                    type: string
                                    example: N/A
                                  example:
                                    - N/A
                                NUMBER_OF_FAILED_ATTEMPTS:
                                  type: array
                                  items:
                                    type: string
                                    example: '0'
                                  example:
                                    - '0'
                                email:
                                  type: array
                                  items:
                                    type: string
                                    example: accesstoken@gmail.com
                                  example:
                                    - accesstoken@gmail.com
                                firstName:
                                  type: array
                                  items:
                                    type: string
                                    example: grootan
                                    description: First name of the user.
                                  example:
                                    - grootan
                                lastName:
                                  type: array
                                  items:
                                    type: string
                                    example: groot
                                  example:
                                    - groot
                                testuser:
                                  type: array
                                  items:
                                    type: string
                                    example: '123'
                                  example:
                                    - '123'
                                username:
                                  type: array
                                  items:
                                    type: string
                                    example: accesstoken
                                  example:
                                    - accesstoken
                            createdTimestamp:
                              type: number
                              example: 1702579160144
                            email:
                              type: string
                              example: accesstoken@gmail.com
                              description: DFG
                            emailVerified:
                              type: boolean
                              example: false
                              description: DFGH
                            enabled:
                              type: boolean
                              example: true
                              description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
                            firstName:
                              type: string
                              example: grootan
                              description: First name of the user.
                            id:
                              type: string
                              example: 94a9b57e-9225-444c-bbfc-1fdb27c4b88b
                            lastName:
                              type: string
                              example: groot
                            requiredActions:
                              type: array
                              items: {}
                              example: []
                            username:
                              type: string
                              example: accesstoken
                    description : User Profile Information.
                  message:
                    type: string
                    example: Users fetched successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/GetUsersBasedOnRoleNotFoundResponse1'
                  - $ref: '#/definitions/GetUsersBasedOnRoleNotFoundResponse2'
                  - $ref: '#/definitions/GetUsersBasedOnClientRoleNotFoundResponse'


      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: clientRole
        in: path
        required: true
        schema:
          type: string
          description: Configure the Client Role name.
      - name: assignedRole
        in: path
        required: true
        schema:
          type: string
          description: Configure the Assigned Role name.
  /realms/{tenantId}/v3_role/{role}/users:
    get:
      tags:
        - Users
      summary: Get Users Based On Role
      description: The Get Users Based On Role API returns a list of users who have the specified role. The user's list will be ordered alphabetically according to the username.
      parameters:
        - name: firstName
          in: query
          schema:
            type: string
            example: grootan
          description : First name of the user.
        - name: lastName
          in: query
          schema:
            type: string
            example: groot
          description : Last name of user.
        - name: email
          in: query
          schema:
            type: string
            example: accesstoken@gmail.com
          description : Email corresponding to the user.
        - name: username
          in: query
          schema:
            type: string
            example: accesstoken
          description : Unique username of the user.
        - name: orderBy
          in: query
          schema:
            type: string
            example: desc
          description : The order direction of the results, either ascending (asc) or descending (desc).
        - name: orderByKey
          in: query
          schema:
            type: string
            example: lastname
          description : firstName or lastName or email or username are used to produce the list based on the Key.
        - name: genericSearchVal
          in: query
          schema:
            type: string
            example: groot
          description : It is a customized search for first name, last name, email, or username, and if the search is empty, we will consider the firstname, lastname, email, and username parameters, else these four parameters will be ignored.
        - name: limit
          in: query
          schema:
            type: string
            example: '1'
          description : The maximum number of users to return.
        - name: offset
          in: query
          schema:
            type: string
            example: '1'
          description : The number of users to skip before starting to collect the result set.
        - name: isUserEnabled
          in: query
          schema:
            type: string
            example: 'true'
          description : Specifies whether the user account is active, with `true` indicating the account is activated.
        - name: isEmailVerified
          in: query
          schema:
            type: string
            example: 'false'
          description : Determines if the user is email address has been confirmed. Defaults to false, indicating unverified.
      responses:
        '200':
          description: Users fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      page:
                        type: object
                        properties:
                          currentPage:
                            type: number
                            example: 1
                          pageSize:
                            type: number
                            example: 20
                          totalPages:
                            type: number
                            example: 1
                          totalRecords:
                            type: number
                            example: 1
                      userList:
                        type: array
                        items:
                          type: object
                          properties:
                            admin:
                              type: boolean
                              example: false
                            attributes:
                              type: object
                              properties:
                                LAST_SUCCESSFUL_LOGIN_TIMESTAMP:
                                  type: array
                                  items:
                                    type: string
                                    example: '1702967761737'
                                  example:
                                    - '1702967761737'
                                NEXT_PASSWORD_ENTRY_PASSWORD_IN:
                                  type: array
                                  items:
                                    type: string
                                    example: N/A
                                  example:
                                    - N/A
                                NUMBER_OF_FAILED_ATTEMPTS:
                                  type: array
                                  items:
                                    type: string
                                    example: '0'
                                  example:
                                    - '0'
                                email:
                                  type: array
                                  items:
                                    type: string
                                    example: accesstoken@gmail.com
                                  example:
                                    - accesstoken@gmail.com
                                firstName:
                                  type: array
                                  items:
                                    type: string
                                    example: grootan
                                  example:
                                    - grootan
                                  description: First name of the user.
                                lastName:
                                  type: array
                                  items:
                                    type: string
                                    example: groot
                                  example:
                                    - groot
                                testuser:
                                  type: array
                                  items:
                                    type: string
                                    example: '123'
                                  example:
                                    - '123'
                                username:
                                  type: array
                                  items:
                                    type: string
                                    example: accesstoken
                                  example:
                                    - accesstoken
                            createdTimestamp:
                              type: number
                              example: 1702579160144
                            email:
                              type: string
                              example: accesstoken@gmail.com
                            emailVerified:
                              type: boolean
                              example: false
                            enabled:
                              type: boolean
                              example: true
                              description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
                            firstName:
                              type: string
                              example: grootan
                              description: First name of the user.
                            id:
                              type: string
                              example: 94a9b57e-9225-444c-bbfc-1fdb27c4b88b
                            lastName:
                              type: string
                              example: groot
                            requiredActions:
                              type: array
                              items: {}
                              example: []
                            username:
                              type: string
                              example: accesstoken
                    description : User Profile Information
                  message:
                    type: string
                    example: Users fetched successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Success
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: Role doesn't found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/GetUsersBasedOnRoleNotFoundResponse1'
                  - $ref: '#/definitions/GetUsersBasedOnRoleNotFoundResponse2'


      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: role
        in: path
        required: true
        schema:
          type: string
          description: Configure the Role name.
  /realms/{tenantId}/v3_user/{userId}:
    delete:
      tags:
        - Users
      summary: Delete User
      description: Delete User API is used to delete a user, which was created using Create User.
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User deleted successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: USER_NOT_FOUND
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Failed to delete user
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: null
                    description: When the data value is null, an issue will occurs.
                  message:
                    type: string
                    example: Failed to delete user
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: GENERAL_ERROR
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
    get:
      tags:
        - Users
      summary: Get User by user id
      description: Use this API to get the user details.
      parameters:
        - name: firstName
          in: query
          schema:
            type: string
            example: grootan
            description: First name of the user.
        - name: limit
          in: query
          schema:
            type: string
            example: '1'
            description: The maximum number of users to return.
        - name: pageNumber
          in: query
          schema:
            type: string
            example: '1'
      responses:
        '200':
          description: User info fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      admin:
                        type: boolean
                        example: true
                      attributes:
                        type: object
                        properties:
                          LAST_SUCCESSFUL_LOGIN_TIMESTAMP:
                            type: array
                            items:
                              type: string
                              example: '1702967761737'
                            example:
                              - '1702967761737'
                          NEXT_PASSWORD_ENTRY_PASSWORD_IN:
                            type: array
                            items:
                              type: string
                              example: N/A
                            example:
                              - N/A
                          NUMBER_OF_FAILED_ATTEMPTS:
                            type: array
                            items:
                              type: string
                              example: '0'
                            example:
                              - '0'
                          email:
                            type: array
                            items:
                              type: string
                              example: accesstoken@gmail.com
                            example:
                              - accesstoken@gmail.com
                          firstName:
                            type: array
                            items:
                              type: string
                              example: grootan
                            example:
                              - grootan
                            description: First name of the user.
                          lastName:
                            type: array
                            items:
                              type: string
                              example: groot
                            example:
                              - groot
                          testuser:
                            type: array
                            items:
                              type: string
                              example: '123'
                            example:
                              - '123'
                          username:
                            type: array
                            items:
                              type: string
                              example: accesstoken
                            example:
                              - accesstoken
                      createdTimestamp:
                        type: number
                        example: 1702579160144
                      email:
                        type: string
                        example: accesstoken@gmail.com
                      emailVerified:
                        type: boolean
                        example: false
                      enabled:
                        type: boolean
                        example: true
                        description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
                      firstName:
                        type: string
                        example: grootan
                        description: First name of the user.
                      id:
                        type: string
                        example: 94a9b57e-9225-444c-bbfc-1fdb27c4b88b
                      lastName:
                        type: string
                        example: groot
                      requiredActions:
                        type: array
                        items: {}
                        example: []
                      username:
                        type: string
                        example: accesstoken
                    description : List of all device details.
                  message:
                    type: string
                    example: User info fetched successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: UserID should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get user
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Admin User Id.
  /realms/{tenantId}/v3_client/groups/{groupID}/users:
    get:
      tags:
        - Users
      summary: Get User By User group
      description: The Get User By User group will filter and search User options based on provided search values.
      parameters:
        - name: limit
          in: query
          schema:
            type: string
            example: '1'
          description : The maximum number of users to return.
        - name: email
          in: query
          schema:
            type: string
            example: '1'
          description : provide email
        - name: offset
          in: query
          schema:
            type: string
            example: '1'
          description : The number of users to skip before starting to collect the result set.
        - name: from
          in: query
          schema:
            type: string
            example: '1'
          description : provide fromDate
        - name: to
          in: query
          schema:
            type: string
            example: '1'
          description : provide toDate
        - name: isUserEnabled
          in: query
          schema:
            type: string
            example: 'true'
          description : Specifies whether the user account is active, with `true` indicating the account is activated.
        - name: orderBy
          in: query
          schema:
            type: string
            example: desc
          description : The order direction of the results, either ascending (asc) or descending (desc).
        - name: orderByKey
          in: query
          schema:
            type: string
            example: lastname
          description : firstName or lastName or email or username or createdTimestamp (to provide each user's creation time)
        - name: genericSearchVal
          in: query
          schema:
            type: string
            example: '{string}'
          description : It is a customized search for first name, last name, email, or username, and if the search is empty, we will consider the firstname, lastname, email, and username parameters, else these four parameters will be ignored.
      responses:
        '200':
          description: Users fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Users fetched successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
                  data:
                    type: object
                    properties:
                      page:
                        type: object
                        properties:
                          currentPage:
                            type: number
                            example: 1
                          pageSize:
                            type: number
                            example: 20
                          totalPages:
                            type: number
                            example: 1
                          totalRecords:
                            type: number
                            example: 1
                      userList:
                        type: array
                        items:
                          type: object
                          properties:
                            admin:
                              type: boolean
                              example: false
                            attributes:
                              type: object
                              properties:
                                email:
                                  type: array
                                  items:
                                    type: string
                                    example: bob.@avccom
                                  example:
                                    - bob@avc.com
                                firstName:
                                  type: array
                                  items:
                                    nullable: true
                                    example: null
                                  example:
                                    - null
                                  description: First name of the user.
                                lastName:
                                  type: array
                                  items:
                                    nullable: true
                                    example: null
                                  example:
                                    - null
                                magicLinkTokenId:
                                  type: array
                                  items:
                                    type: string
                                    example: e2f1e48c-a522-4361-8571-9410196cb69e
                                  example:
                                    - e2f1e48c-a522-4361-8571-9410196cb69e
                                username:
                                  type: array
                                  items:
                                    type: string
                                    example: bob@avc.com
                                  example:
                                    - bob@avc.com
                            createdTimestamp:
                              type: number
                              example: 1702580538568
                            email:
                              type: string
                              example: bob@avc.com
                            emailVerified:
                              type: boolean
                              example: false
                            enabled:
                              type: boolean
                              example: true
                              description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
                            id:
                              type: string
                              example: dd9349b6-4b0e-48eb-a984-a28e9d3c2f8a
                            requiredActions:
                              type: array
                              items: {}
                              example: []
                            username:
                              type: string
                              example: bob@avc.com
                    description : User Profile Information
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []

    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: groupID
        in: path
        required: true
        schema:
          type: string
          description: Configure the Group id .
        # /realms/{tenantId}/v3_user/{username}/otp-brute-force:
        #   get:
        #     tags:
        #       - Users
        #     summary: Get User Status
        #     description: The Get User Status API will return a list showing the user was locked via Bruteforce or not.
        #     responses:
        #       '200':
        #         description: Fetched the user status successfully.
        #         content:
        #           application/json:
        #             schema:
        #               type: object
        #               properties:
        #                 otp_disabled:
        #                   type: boolean
        #                   description : otp_disabled explains the status of the user, whether the user got locked (true) or unlocked (false) by OTP Brute Force.
        #                 otp_numFailures:
        #                   type: number
        #                   example: 1
        #                   description : otp_numFailures is the number of failures occured for the user to get locked (true).
        #                 otp_lastIPFailure:
        #                   type: string
        #                   example: 1.1
        #                   description : otp_lastIPFailure is the website's last IP domain used by the User.
        #                 otp_lastFailure:
        #                   type: number
        #                   example: 345678908
        #                   description : Otp_lastFailure results the timestamp when the user was locked.
        #       '401':
        #         description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
        #         content:
        #           application/json:
        #             schema:
        #               type: object
        #               properties:
        #                 error:
        #                   type: string
        #                   example: HTTP 401 Unauthorized
        #                   description: The error message which indicates the issue.

  #   parameters:
  #     - name: tenantId
  #       in: path
  #       required: true
  #       schema:
  #         type: string
  #         description: Configure the Realm's name.
  #     - name: username
  #       in: path
  #       required: true
  #       schema:
  #         type: string
  #         description: Configure the user name.
  /realms/{tenantId}/v3_resend_otp_bruteforce/users/{userId}:
    get:
      tags:
        - Users
      summary: Get OTP Brute Force Status
      description: TThe Get OTP Brute Force status Digitanium API gets OTP Brute Force lock status of a user.
      responses:
        '200':
          description:  User Otp brute force status fetched successfully.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/GetOtpBruteforceStatusOkResponse2'
                  - $ref: '#/definitions/GetOtpBruteforceStatusOkResponse1'
        '401':
          description:  The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: No results found
                    description: When the data value is null, an issue will occurs.
                  message:
                    type: string
                    example: User does not exist
                    description : The message explains the result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.

      security:
        - BearerAuth: []


    delete:
      tags:
        - Users
      summary: Unlock User OTP Brute Force
      description: The Unlock User OTP Brute Force Digitanium API will unlock the user locked by the OTP Brute Force.
      responses:
        '200':
          description: User unlocked from OTP brute force successfully.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/UnlockUserOtpBruteForceOkResponse1'
                  - $ref: '#/definitions/UnlockUserOtpBruteForceOkResponse2'
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: No results found
                    description: When the data value is null, an issue will occurs.
                  message:
                    type: string
                    example: User does not exist
                    description : The message explains the result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.

      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.
  /realms/{tenantId}/v3_user/search:
    get:
      tags:
        - Users
      summary: Search User
      description: API to search the users.
      parameters:
        - name: key
          in: query
          schema:
            type: string
            example: '{{search_keyword}}'
          description : It can be a search parameter and will search over username, firstname, lastname and email.
      responses:
        '200':
          description: Users fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      page:
                        type: object
                        properties:
                          currentPage:
                            type: number
                            example: 1
                          pageSize:
                            type: number
                            example: 20
                          totalPages:
                            type: number
                            example: 1
                          totalRecords:
                            type: number
                            example: 12
                      userList:
                        type: array
                        items:
                          type: object
                          properties:
                            admin:
                              type: boolean
                              example: false
                            attributes:
                              type: object
                              properties:
                                LAST_SUCCESSFUL_LOGIN_TIMESTAMP:
                                  type: array
                                  items:
                                    type: string
                                    example: '1702968101789'
                                  example:
                                    - '1702968101789'
                                NEXT_PASSWORD_ENTRY_PASSWORD_IN:
                                  type: array
                                  items:
                                    type: string
                                    example: N/A
                                  example:
                                    - N/A
                                NUMBER_OF_FAILED_ATTEMPTS:
                                  type: array
                                  items:
                                    type: string
                                    example: '0'
                                  example:
                                    - '0'
                                email:
                                  type: array
                                  items:
                                    type: string
                                    example: bob@gmail.com
                                  example:
                                    - bob@gmail.com
                                firstName:
                                  type: array
                                  items:
                                    type: string
                                    example: grootan
                                  example:
                                    - grootan
                                  description: First name of the user.
                                lastName:
                                  type: array
                                  items:
                                    type: string
                                    example: groot
                                  example:
                                    - groot
                                testuser:
                                  type: array
                                  items:
                                    type: string
                                    example: '123'
                                  example:
                                    - '123'
                                username:
                                  type: array
                                  items:
                                    type: string
                                    example: accesstoken
                                  example:
                                    - accesstoken
                            createdTimestamp:
                              type: number
                              example: 1702579160144
                            email:
                              type: string
                              example: bob@gmail.com
                            emailVerified:
                              type: boolean
                              example: false
                            enabled:
                              type: boolean
                              example: true
                              description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
                            firstName:
                              type: string
                              example: grootan
                              description: First name of the user.
                            id:
                              type: string
                              example: 94a9b57e-9225-444c-bbfc-1fdb27c4b88b
                            lastName:
                              type: string
                              example: groot
                            requiredActions:
                              type: array
                              items: {}
                              example: []
                            username:
                              type: string
                              example: accesstoken
                    description : User informations.
                  message:
                    type: string
                    example: Users fetched successfully
                    description : The message explains the result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: No results found
                    description: When the data value is null, an issue will occurs.
                  message:
                    type: string
                    example: User does not exist
                    description : The message explains the result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Username should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get userCaused by null
                    description: The error message which indicates the issue.
                  status:
                    type: string
                    example: Bad Request
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related API's.

      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_user/search/attribute:
    get:
      tags:
        - Users
      summary: Search User By User Attribute
      description: API to search and fetch the user list using user's attributes.
      parameters:
        - name: key
          in: query
          required: true
          schema:
            type: string
            example: 'phone_number'
          description : Provide Attribute Name.
        - name: value
          in: query
          required: true
          schema:
            type: string
            example: '1234567890'
          description : Provide Attribute value to search.
      responses:
        '200':
          description: Users fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Users fetched successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        admin:
                          type: boolean
                          example: false
                        attributes:
                          type: object
                          properties:
                            LAST_SUCCESSFUL_LOGIN_TIMESTAMP:
                              type: array
                              items:
                                type: string
                                example: '1702968101789'
                              example:
                                - '1702968101789'
                            NEXT_PASSWORD_ENTRY_PASSWORD_IN:
                              type: array
                              items:
                                type: string
                                example: N/A
                              example:
                                - N/A
                            NUMBER_OF_FAILED_ATTEMPTS:
                              type: array
                              items:
                                type: string
                                example: '0'
                              example:
                                - '0'
                            email:
                              type: array
                              items:
                                type: string
                                example: bob@gmail.com
                              example:
                                - bob@gmail.com
                            firstName:
                              type: array
                              items:
                                type: string
                                example: grootan
                              example:
                                - grootan
                              description: First name of the user.
                            lastName:
                              type: array
                              items:
                                type: string
                                example: groot
                              example:
                                - groot
                            testuser:
                              type: array
                              items:
                                type: string
                                example: '123'
                              example:
                                - '123'
                            username:
                              type: array
                              items:
                                type: string
                                example: accesstoken
                              example:
                                - accesstoken
                        createdTimestamp:
                          type: number
                          example: 1702579160144
                        email:
                          type: string
                          example: bob@gmail.com
                        emailVerified:
                          type: boolean
                          example: false
                        enabled:
                          type: boolean
                          example: true
                          description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
                        firstName:
                          type: string
                          example: grootan
                          description: First name of the user.
                        id:
                          type: string
                          example: 94a9b57e-9225-444c-bbfc-1fdb27c4b88b
                        lastName:
                          type: string
                          example: groot
                        requiredActions:
                          type: array
                          items: {}
                          example: []
                        username:
                          type: string
                          example: accesstoken
                    description : List of all User details for the given attributes.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User doesn't found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : The message explains the result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Failed to get user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get userCaused by null.
                    description : The message explains the result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_resend_otp_bruteforce/users:
    delete:
      tags:
        - Users
      summary: Unlock All User OTP Brute Force
      description: The Unlock all Users OTP Brute Force API will unlock all the users locked by the OTP Brute Force.
      responses:
        '200':
          description: All users unlocked from OTP brute force successfully.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/UnlockAllUsersOtpBruteForceOkresponse2'
                  - $ref: '#/definitions/UnlockAllUsersOtpBruteForceOkresponse1'

        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.

  /realms/{tenantId}/v3_user/{userId}/disable:
    put:
      tags:
        - Users
      summary: Disable User
      description: This API is used to disable a user temporarily. Disabled users will not be allowed to login.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: true
                  description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User disabled successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '404':
          description: User doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.

                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Username should not be null
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to updateuser Caused by null.
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.
  /realms/{tenantId}/v3_user/{userId}/enable:
    put:
      tags:
        - Users
      summary: Enable User
      description: Use this API to enable the user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: false
                  description : If true, the user is enabled; otherwise, disabled. Disabled users cannot log in to IDP.
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User enabled successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Username should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update user Caused by null.
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_user/{userId}/promote:
    put:
      tags:
        - Users
      summary: Promote User
      description: Once promoted the user will have the 'digitanium_admin' role tagged and the corresponding role permissions.
      responses:
        '200':
          description: User promoted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User promoted successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Failed to update user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update userCaused by null.
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    delete:
      tags:
        - Users
      summary: Revoke Admin access
      description: Deletes the admin role permission for a particular user.
      responses:
        '200':
          description: Admin access revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin access revoked successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Failed to update user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update userCaused by null.
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '404':
          description: User doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.
  /realms/{tenantId}/v3_user/{userId}/tenantlist:
    get:
      tags:
        - Users
      summary: User Tenant List
      description: Returns the list of tenants for a particular user.
      responses:
        '200':
          description: Tenant list fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: astqa
                    description : User is information.
                  message:
                    type: string
                    example: Tenant list fetched successfully
                    description : The message explains the result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: No results found
                    description: When the data value is null, an issue will occurs.
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: USER_NOT_FOUND
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.
  /realms/{tenantId}/v3_user/{userId}/requiredaction:
    delete:
      tags:
        - Users
      summary: Revoke Required Actions
      description: Using this API, users required actions can be revoked. The actions can be performed even when the user is locked or disabled.
      responses:
        '200':
          description: User required actions revoked successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User required actions revoked successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Required actions should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Required actions should not be null or empty
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: BAD_REQUEST
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.
  /realms/{tenantId}/v3_user/{userId}/role:
    delete:
      tags:
        - Users
      summary: Revoke Roles
      description: Using this API client and realm roles will be revoked from the user's.
      responses:
        '200':
          description: User roles revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User roles revoked successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Failed to revoke user roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to revoke user roles Caused by null
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.
  /realms/{tenantId}/v3_user/adminusers:
    get:
      tags:
        - Users
      summary: List Admin Users
      description: List Admin Users API will return a list of admin users.
      responses:
        '200':
          description: Admin users fetched successfully.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/ListAdminUsersOkResponse1'
                  - $ref: '#/definitions/ListAdminUsersOkResponse2'
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Message explains result of the API call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get userCaused by null
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.

        '403':
          description: Failed to get the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get user
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Forbidden
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.

      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  # /realms/{tenantId}/v3_user/{userId}:
  #     security:
  #       - BearerAuth: []
  #   parameters:
  #     - name: tenantId
  #       in: path
  #       required: true
  #       schema:
  #         type: string
  #         description: Configure the Realm's name.
  #     - name: userId
  #       in: path
  #       required: true
  #       schema:
  #         type: string
  #         description: Configure the user name.

  /realms/{tenantId}/address/{userId}/add:
    post:
      tags:
        - Users
      summary: Add address
      description: Add Address API will add the address for the requested user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postalCode:
                  type: string
                  example: '654321'
                  description : Define the postalCode of the given address.
            examples:
              Add address:
                value:
                  addressDetails: addressDetails
                  addressTitle: Home address
                  addressType: Home
                  city: scotland
                  cityCode: '625531'
                  defaultAddress: true
                  directions: ''
                  district: kanchipuram
                  districtCode: '123456'
                  firstName: arun
                  lastName: raj
                  postalCode: '654321'
                  town: hometown
                  townCode: '625521'
              Add address - Mandatory missing:
                value:
                  addressDetails: addressDetails
                  addressTitle: Home address
                  addressType: Home
                  city: scotland
                  cityCode: '625531'
                  defaultAddress: true
                  directions: ''
                  district: kanchipuram
                  districtCode: '123456'
                  firstName: arun
                  lastName: raj
                  town: hometown
                  townCode: '625521'
              Add address - Unauthorized:
                value:
                  addressDetails: addressDetails
                  addressTitle: Home address
                  addressType: Home
                  city: scotland
                  cityCode: '625531'
                  defaultAddress: true
                  directions: ''
                  district: kanchipuram
                  districtCode: '123456'
                  firstName: arun
                  lastName: raj
                  postalCode: '654321'
                  town: hometown
                  townCode: '625521'
              Add address - only mandatory:
                value:
                  postalCode: '654321'
      responses:
        '200':
          description: Address added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Address added successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Mandatory data is missing!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Mandatory data is missing!
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unable to add address
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Admin User Id.
  /realms/{tenantId}/address/{userId}:
    get:
      tags:
        - Users
      summary: Get address
      description: Get Address API will fetch the address of the requested user.
      responses:
        '200':
          description: Address info fetched successfully.
          content:
            application/json:
              schema:
                type: object
                description : The user info object.
                properties:
                  data:
                    type: array
                    description : Describe the details related to the address.
                    items:
                      type: object
                      properties:
                        addressDetails:
                          type: string
                          example: addressDetails
                          description : Describe the details related to the address.
                        addressID:
                          type: string
                          example: 4c30ff6c-72b8-42b2-bb7d-07e0a5bdb0fa
                          description : Define the addressID given for a particular user.
                        addressTitle:
                          type: string
                          example: Home address
                          description : Define the title given to the respective address.
                        addressType:
                          type: string
                          example: Home
                          description : Define the place of the address.
                        city:
                          type: string
                          example: scotland
                          description : Define the city given for the address.
                        cityCode:
                          type: string
                          example: '625531'
                          description : Define the cityCode given for the location.
                        defaultAddress:
                          type: string
                          example: 'false'
                          description : The configured default address will be taken, if true.
                        direction:
                          type: string
                          example: ''
                          description : Provide the direction for the address.
                        district:
                          type: string
                          example: kanchipuram
                          description : Define the district the address is located.
                        districtCode:
                          type: string
                          example: '123456'
                          description : Define the districtCode the address is located.
                        firstName:
                          type: string
                          example: arun
                          description : firstName of the user.
                        lastName:
                          type: string
                          example: raj
                          description : lastName of the user.
                        postalCode:
                          type: string
                          example: '654321'
                          description : Define the postalCode of the given address.
                        town:
                          type: string
                          example: hometown
                          description : Define the town the address is located.
                        townCode:
                          type: string
                          example: '625521'
                          description : Define the townCode the address is located.
                  message:
                    type: string
                    example: Address info fetched successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User doesn't found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/GetAddressNotFoundResponse'
                  - $ref: '#/definitions/GetAddressNotFoundException'

      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Admin User Id.
  /realms/{tenantId}/address/{userId}/edit:
    put:
      tags:
        - Users
      summary: Edit Address
      description: Edit Address API will update the address for the requested user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                addressID:
                  type: string
                  example: '34332323'
                  description : Define the addressID given for a particular address.
      responses:
        '200':
          description: Address changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Address changed successfully.
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description :   The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Mandatory data is missing!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Mandatory data is missing!
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description :   The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: Invalid address
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/EditAddressNotFoundResponse'
                  - $ref: '#/definitions/EditAddressNotFoundException'

      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Admin User Id .
  /realms/{tenantId}/address/{userId}/delete:
    delete:
      tags:
        - Users
      summary: Delete Address
      description: Delete Address API will delete the address of the requested user.

      responses:
        '200':
          description: Address deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Address deleted successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '400':
          description: Mandatory data is missing!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Mandatory data is missing!
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User does not exist or Invalid address
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/DeleteAddressNotFoundResponse'
                  - $ref: '#/definitions/DeleteAddressNotFoundException'


      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Admin UserId.
  /realms/{tenantId}/v3_user/getusers:
    get:
      tags:
        - Users
      summary: List Users
      description: List Users will return a list of user's, along with their details that match the given query parameters.
      responses:
        '200':
          description: Users fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Users fetched successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Success
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
                  data:
                    type: object
                    properties:
                      userList:
                        type: array
                        items:
                          type: object
                          properties:
                            username:
                              type: string
                              example: USER_NAME_1
                            enabled:
                              type: boolean
                            emailVerified:
                              type: boolean
                            attributes:
                              type: object
                              properties:
                                digitaniumUserIdOnboardingType:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      0:
                                        type: string
                                        example: onscreen
                                digitaniumCreateActivation:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      0:
                                        type: string
                                        example: true
                                digitaniumRequiredAction:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      0:
                                        type: string
                                        example: kobil-2fa-required-action
                            requiredActions:
                              type: array
                              items:
                                example: []
                            admin:
                              type: boolean
                      page:
                        type: object
                        properties:
                          pageSize:
                            type: number
                            example: 20
                          totalRecords:
                            type: number
                            example: 6
                          totalPages:
                            type: number
                            example: 1
                          currentPage:
                            type: number
                            example: 1
                    description : User details
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get userCaused by null
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related API's.
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User does not exist
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
                  data:
                    type: string
                    example: No results found
                    description: ''


      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_user/{userId}/group:
    put:
      tags:
        - Users
      summary: Add User Group
      description: Use this API to add the users within a group.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                groups:
                  description: Mention the groups where user need to be added.
                  type: array
                  items:
                    type: object
                    example:
                      test

      responses:
        '200':
          description: User group added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User group added successfully.
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Success
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example:  HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description:  User doesn't exist or Group doesn't exist.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/AddUserGroupGroupNotfoundResponse'
                  - $ref: '#/definitions/AddUserGroupUserNotfoundResponse'
        '400':
          description: The request body is invalid.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/AddUserGroupBadRequestResponse'
                  - $ref: '#/definitions/AddUserGroupBadRequestException'

      security:
        - BearerAuth: []


    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.

    delete:
      tags:
        - Users
      summary: Delete User Group
      description: User Group Delete API is used to remove the users from the group.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                groups:
                  type: array
                  description : Mention the groups where user need to be added.
                  items:
                    type: object
                    example: [
                      test
                    ]
      responses:
        '200':
          description: User group removed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User group removed successfully.
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: Success
                    description : The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 5 indicates user-related API's.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description:  User doesn't exist or Group doesn't exist.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/DeleteUserGroupGroupNotfoundResponse'
                  - $ref: '#/definitions/DeleteUserGroupUserNotfoundResponse'
        '400':
          description:  Invalid request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/DeleteUserGroupBadRequestException'
                  - $ref: '#/definitions/DeleteUserGroupBadRequestResponse'
      security:
        - BearerAuth: []
  /realms/{tenantId}/mail/{userId}:
    post:
      tags:
        - Email
      summary: Send Email
      description: Email will be sent to the user's based on the template which is specified in the mailtype.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/definitions/SendMailRequestBody1'
                - $ref: '#/definitions/SendMailRequestBody2'
                - $ref: '#/definitions/SendMailRequestBody3'
                - $ref: '#/definitions/SendMailRequestBody4'

      responses:
        '200':
          description: The mail was sent successfully to the user.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/SendMailOKResponse2'
                  - $ref: '#/definitions/SendMailOKResponse1'
        '404':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/SendEmailNotFoundResponse1'
                  - $ref: '#/definitions/SendEmailNotFoundResponse2'
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Mail type or Text body is required
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/SendMailBadRequestResponse1'
                  - $ref: '#/definitions/SendMailBadRequestResponse2'
                  - $ref: '#/definitions/SendMailBadRequestResponse3'
                  - $ref: '#/definitions/SendMailBadRequestResponse4'
                  - $ref: '#/definitions/SendMailBadRequestResponse5'
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.


  /realms/{tenantId}/mail/setup:
    post:
      tags:
        - Email
      summary: SMTP Configuration
      description: SMTP Configuration API used configure the email configurations.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                envelopeFrom:
                  type: string
                  example:
                  description: An email address used for bounces.
                from:
                  type: string
                  example: admin@midentitybox.com
                  description: Enter from mailId.
                fromDisplayName:
                  type: string
                  example: Identity Dashboard
                  description: A user friendly display name for from address.
                host:
                  type: string
                  example: mail2.kobil.com
                  description:   Enter valid host(Eg.smtp.gamil.com).
                password:
                  type: string
                  example: AEV+d3P.n9Wr-aR
                  description: Password corresponding to from mail address.
                port:
                  type: string
                  example: '587'
                  description: Enter valid port number.
                replyTo:
                  type: string
                  example: admin@midentitybox.com
                  description: Mail to which reply needs to be sent.
                replyToDisplayName:
                  type: string
                  example: Support
                  description: A user friendly display name for from address.
                ssl:
                  type: string
                  example: 'true'
                  description: Enable SSL.
                starttls:
                  type: string
                  example: 'true'
                  description: enable TLS.
                user:
                  type: string
                  example: admin.midentitybox
                  description: From mail address.
      responses:
        '200':
          description: Successfully updated SMTP details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully updated SMTP Details.
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 1
                    description: Subsystem 1 indicates Tenant-related APIs.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Missing parameters Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/SMTPConfigurationBadRequestResponse1'
                  - $ref: '#/definitions/SMTPConfigurationBadRequestResponse2'
                  - $ref: '#/definitions/SMTPConfigurationBadRequestResponse3'
                  - $ref: '#/definitions/SMTPConfigurationBadRequestResponse4'
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantid}/mail/test:
    post:
      tags:
        - Email
      summary: Test SMTP Configuration
      description: The Test SMTP Configuration API is utilized to verify the email settings that have been configured.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mailType:
                  type: string
                  example: TEST
      responses:
        '200':
          description: Mail sent successfully to the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Mail Sent Successfully to the user
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates Email-related APIs.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: Failed to send MailCaused by null.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/TestSMTPConfigurationBadRequestResponse1'
                  - $ref: '#/definitions/TestSMTPConfigurationBadRequestResponse3'
                  - $ref: '#/definitions/TestSMTPConfigurationBadRequestResponse2'
                  - $ref: '#/definitions/TestSMTPConfigurationBadRequestResponse4'
      security:
        - BearerAuth: []
    parameters:
      - name: tenantid
        in: path
        required: true
        schema:
          type: string
  /realms/{tenantId}/kobil-magic-link/access-link:
    post:
      tags:
        - Magic link
      summary: Send Magic Link
      description: Authenticate user through email via link.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  example: test
                email:
                  type: string
                  example: sujith.s@grootan.com
                  description: Configure the email through which magic link will be sent.
                forceCreate:
                  type: boolean
                  example: true
                  description: Create user with the email when user doesn't exist.
                redirectUri:
                  type: string
                  example: https://oidcdebugger.com/debug
                  description: Specify the URI, where user needs to land after completing the process.
                resetPassword:
                  type: boolean
                  example: true
                  description: reset password option is enabled while clicking the Magic link.
                responseMode:
                  type: string
                  example: form_post
                  description: Configure the type how the Authorization Server should return the result.
                responseType:
                  type: string
                  example: code token
                  description: Configure the type of response that has to be received on execution.
                scope:
                  type: string
                  example: open_id
                  description: The scope requested for the token.
      responses:
        '200':
          description: Mail was sent successfully to provided email ID along with the magic link.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Mail was sent successfully to provided email id with magic link
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related APIs.
        '500':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: There might be a problem. Please, try again.
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Internal Server Error
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related APIs.


        '400':
          description: Response type or mode is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: >-
                      Invalid response type or response mode, Provide in oidc
                      standard format.
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related APIs.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials, Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: User is not present, Please try again.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/SendMagicLinkNotFoundResponse1'
                  - $ref: '#/definitions/SendMagicLinkNotFoundResponse2'
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_client/uma:
    post:
      tags:
        - Apps (Client)
      summary: UMA App
      description: Use this API to access a resource on the resource server which is secured based on the given query parameters.
      responses:
        '200':
          description: Created app and migrated users successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Created app and migrated users successfully.
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '409':
          description:   App already exists
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/UMAAppConflictResponse1'
                  - $ref: '#/definitions/UMAAppConflictResponse2'

        '400':
          description: Admin password should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin password is mandatory
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Bad Request
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: adminuser
        in: query
        required: true
        schema:
          type: string
          description: Configure the Admin user name.
      - name: adminpassword
        in: query
        required: true
        schema:
          type: string
          description: Configure the Admin Password.
      - name: migrate
        in: query
        required: true
        schema:
          type: boolean



  /realms/{tenantId}/v3_client/:
    get:
      tags:
        - Apps (Client)
      summary: List all apps
      description: List all apps API will return the list of apps that are created through the Create App.
      responses:
        '200':
          description: Apps info fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App info fetched successfully
                    description : Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description: Subsystem 5 indicates Email-related APIs.
                  data:
                    type: object
                    properties:
                      appName:
                        type: string
                        example: appname1
                        description: App information is such as name, enabled etc
                      id:
                        type: string
                        example: 9a9e38c6-2548-4a45-bd77-ca29a40e34db
                      name:
                        type: string
                        example: test
                      enabled:
                        type: boolean
                      appAuthenticatorType:
                        type: string
                        example:
                      bearerOnly:
                        type: boolean
                      consentRequired:
                        type: boolean
                      standardFlowEnabled:
                        type: boolean
                      implicitFlowEnabled:
                        type: boolean
                      directAccessGrantsEnabled:
                        type: boolean
                      serviceAccountsEnabled:
                        type: boolean
                      publicApp:
                        type: boolean
                      authenticationFlowBindingOverrides:
                        type: object
                      attributes:
                        type: object
                        properties:
                          app_logo:
                            type: string
                            example: https://www.yyyyyy.com/xyz-063534.jpg
                          backchannel.logout.session.required:
                            type: string
                            example: true
                          backchannel.logout.revoke.offline.tokens:
                            type: string
                            example: false
                      webOrigins:
                        type: array
                        items:
                          type: string
                        example: [
                          /*
                        ]
                      baseUrl:
                        type: string
                        example:
                      rootUrl:
                        type: string
                        example:
                      defaultRoles:
                        type: array
                        items:
                          type: string
                        example: [
                          view-profile
                            manage-account
                            uma_authorization
                        ]
                      description:
                        type: string
                        example:
                      frontchannelLogout:
                        type: boolean
                      fullScopeAllowed:
                        type: boolean
                      nodeReRegistrationTimeout:
                        type: number
                        example: -1
                      notBefore:
                        type: number
                        example: 0
                      protocol:
                        type: string
                        example: openid-connect
                      protocolMappers:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 506d3b5d-b3b7-4fdf-ac15-1fdffb9a6dba
                            name:
                              type: string
                              example: Client Host
                            protocol:
                              type: string
                              example: openid-connect
                            protocolMapper:
                              type: string
                              example: oidc-usersessionmodel-note-mapper
                            config:
                              type: object
                              properties:
                                user.session.note:
                                  type: string
                                  example: clientHost
                                introspection.token.claim:
                                  type: string
                                  example: true
                                id.token.claim:
                                  type: string
                                  example: true
                                access.token.claim:
                                  type: string
                                  example: true
                                claim.name:
                                  type: string
                                  example: clientHost
                                jsonType.label:
                                  type: string
                                  example: String
                      redirectUris:
                        type: array
                        items:
                          type: string
                        example: [
                          /*
                        ]
                      registeredNodes:
                        type: object
                      surrogateAuthRequired:
                        type: boolean
                        description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: APP not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get App
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: APP_NOT_FOUND_STATUS
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
      security:
        - BearerAuth: []
    put:
      tags:
        - Apps (Client)
      summary: Update App
      description: Use Update App API, to update the app through IDP, which has already been created using Create App.
      operationId: updateApp-Success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appName:
                  type: string
                  example: asd
                implicitFlowEnabled:
                  type: boolean
                authenticationFlowBindingOverrides:
                  type: object
                  properties:
                    browser:
                      type: string
                      example: ""
                name:
                  type: string
                  example: new-app1
      responses:
        '200':
          description: App updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App updated successfully.
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '400':
          description: App name should not be null or empty.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App name should not be null or empty.
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: BAD_REQUEST
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
        '404':
          description: App does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App does not exist
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: APP_NOT_FOUND_STATUS
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
        '500':
          description: App does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update AppCaused by null
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: GENERAL ERROR
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
      security:
        - BearerAuth: []
    post:
      tags:
        - Apps (Client)
      summary: Create App
      description: Apps are entities that can request IDP to authenticate a user. It also use IDP to encrypt themselves and provide a single sign-on solution which can securely invoke other services over the network.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appName:
                  type: string
                  example: appname1
                name:
                  type: string
                  example:
                description:
                  type: string
                  example:
                rootUrl:
                  type: string
                  example:
                adminUrl:
                  type: string
                  example:
                baseUrl:
                  type: string
                  example:
                attributes:
                  type: object
                  properties:
                    app_logo:
                      type: string
                      example: https://www.yyyyyy.com/xyz-063534.jpg
                surrogateAuthRequired:
                  type: boolean
                enabled:
                  type: boolean
                appAuthenticatorType:
                  type: string
                  example:
                secret:
                  type: string
                  example:
                registrationAccessToken:
                  type: string
                  example:
                defaultRoles:
                  type: string
                  format: nullable
                redirectUris:
                  type: string
                  format: nullable
                implicitFlowEnabled:
                  type: boolean
                directAccessGrantsEnabled:
                  type: boolean
      responses:
        '200':
          description: App created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App created successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
        '400':
          description: App name should not be null or empty
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/CreateAppBadRequestResponse1'
                  - $ref: '#/definitions/CreateAppBadRequestResponse2'
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '409':
          description: App already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App already exists
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: CONFLICT
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.

      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_client/{clientId}:
    get:
      tags:
        - Apps (Client)
      summary: Get App Info
      description: Get App Info API will return the app info that match the given parameters.
      parameters:
        - name: clientId
          required: true
          in: query
          schema:
            type: string
            example: '{{appname}}'
      responses:
        '200':
          description: App info fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App info fetched successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
                  data:
                    type: object
                    properties:
                      appName:
                        type: string
                        example: appname1
                        description :   Unique appName of the application.
                      id:
                        type: string
                        example: 9a9e38c6-2548-4a45-bd77-ca29a40e34db
                      name:
                        type: string
                        example:
                      enabled:
                        type: boolean
                      appAuthenticatorType:
                        type: string
                        example:
                      bearerOnly:
                        type: boolean
                      consentRequired:
                        type: boolean
                      standardFlowEnabled:
                        type: boolean
                      implicitFlowEnabled:
                        type: boolean
                      directAccessGrantsEnabled:
                        type: boolean
                      serviceAccountsEnabled:
                        type: boolean
                      publicApp:
                        type: boolean
                      authenticationFlowBindingOverrides:
                        type: object
                      attributes:
                        type: object
                        properties:
                          app_logo:
                            type: string
                            example: https://www.yyyyyy.com/xyz-063534.jpg
                          backchannel.logout.session.required:
                            type: string
                            example: true
                          backchannel.logout.revoke.offline.tokens:
                            type: string
                            example: false
                      webOrigins:
                        type: array
                        items:
                          type: string
                          example: /*

                        example: [
                          /*
                        ]
                      baseUrl:
                        type: string
                        example:
                      rootUrl:
                        type: string
                        example:
                      defaultRoles:
                        type: array
                        items:
                          type: string
                        example: [
                          view-profile
                            manage-account
                            uma_authorization
                        ]
                      description:
                        type: string
                        example:
                      frontchannelLogout:
                        type: boolean
                      fullScopeAllowed:
                        type: boolean
                      nodeReRegistrationTimeout:
                        type: number
                        example: -1
                      notBefore:
                        type: number
                        example: 0
                      protocol:
                        type: string
                        example: openid-connect
                      protocolMappers:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 506d3b5d-b3b7-4fdf-ac15-1fdffb9a6dba
                            name:
                              type: string
                              example: Client Host
                            protocol:
                              type: string
                              example: openid-connect
                            protocolMapper:
                              type: string
                              example: oidc-usersessionmodel-note-mapper
                            config:
                              type: object
                              properties:
                                user.session.note:
                                  type: string
                                  example: clientHost
                                introspection.token.claim:
                                  type: string
                                  example: true
                                id.token.claim:
                                  type: string
                                  example: true
                                access.token.claim:
                                  type: string
                                  example: true
                                claim.name:
                                  type: string
                                  example: clientHost
                                jsonType.label:
                                  type: string
                                  example: String
                      redirectUris:
                        type: array
                        items:
                          type: string
                        example: [
                          /*
                        ]
                      registeredNodes:
                        type: object
                      surrogateAuthRequired:
                        type: boolean

        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description:  App does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App does not exists
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: APP_NOT_FOUND_STATUS
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
        '500':
          description:  ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get AppCaused by null
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: GENERAL ERROR
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.


      security:
        - BearerAuth: []
    delete:
      tags:
        - Apps (Client)
      summary: Delete App
      description: Delete App is used to delete an app, which has already been created using Create App.


      responses:
        '200':
          description: App delete successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App deleted successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.


        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: App does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App does not exist
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
        '500':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/DeleteAppInternalServerErrorResponse2'
                  - $ref: '#/definitions/DeleteAppInternalServerErrorResponse1'
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: clientId
        in: path
        required: true
        schema:
          type: string
          description: Configure the App name.
  /realms/{tenantId}/.well-known/openid-configuration:
    get:
      tags:
        - Authorization
      summary: Well known API
      description: From the provider's Well-Known Configuration Endpoint, returns the OpenID Connect configuration values. It specifies a sign-in flow that allows a client application to authenticate a user and acquire information (or "claims") about that user, such as the user's name, email id, and some other data. A secure JSON Web Token (JWT) called ID token is used to store user identity information.
      operationId: wellKnownApi
      responses:
        '200':
          description: Well known API
          content:
            application/json:
              schema:
                type: object
                properties:
                  acr_values_supported:
                    type: array
                    items:
                      type: string
                      example: '0'
                    example:
                      - '0'
                      - '1'
                  authorization_encryption_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: RSA-OAEP
                    example:
                      - RSA-OAEP
                      - RSA-OAEP-256
                      - RSA1_5
                  authorization_encryption_enc_values_supported:
                    type: array
                    items:
                      type: string
                      example: A256GCM
                    example:
                      - A256GCM
                      - A192GCM
                      - A128GCM
                      - A128CBC-HS256
                      - A192CBC-HS384
                      - A256CBC-HS512
                  authorization_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/auth
                  authorization_signing_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: PS384
                    example:
                      - PS384
                      - ES384
                      - RS384
                      - HS256
                      - HS512
                      - ES256
                      - RS256
                      - HS384
                      - ES512
                      - PS256
                      - PS512
                      - RS512
                  backchannel_authentication_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/ext/ciba/auth
                  backchannel_authentication_request_signing_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: PS384
                    example:
                      - PS384
                      - ES384
                      - RS384
                      - ES256
                      - RS256
                      - ES512
                      - PS256
                      - PS512
                      - RS512
                  backchannel_logout_session_supported:
                    type: boolean
                    example: true
                  backchannel_logout_supported:
                    type: boolean
                    example: true
                  backchannel_token_delivery_modes_supported:
                    type: array
                    items:
                      type: string
                      example: poll
                    example:
                      - poll
                      - ping
                  check_session_iframe:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/login-status-iframe.html
                  claim_types_supported:
                    type: array
                    items:
                      type: string
                      example: normal
                    example:
                      - normal
                  claims_parameter_supported:
                    type: boolean
                    example: true
                  claims_supported:
                    type: array
                    items:
                      type: string
                      example: aud
                    example:
                      - aud
                      - sub
                      - iss
                      - auth_time
                      - name
                      - given_name
                      - family_name
                      - preferred_username
                      - email
                      - acr
                  code_challenge_methods_supported:
                    type: array
                    items:
                      type: string
                      example: plain
                    example:
                      - plain
                      - S256
                  device_authorization_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/auth/device
                  end_session_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/logout
                  frontchannel_logout_session_supported:
                    type: boolean
                    example: true
                  frontchannel_logout_supported:
                    type: boolean
                    example: true
                  grant_types_supported:
                    type: array
                    items:
                      type: string
                      example: authorization_code
                    example:
                      - authorization_code
                      - implicit
                      - refresh_token
                      - password
                      - client_credentials
                      - urn:ietf:params:oauth:grant-type:device_code
                      - urn:openid:params:grant-type:ciba
                      - urn:ietf:params:oauth:grant-type:token-exchange
                  id_token_encryption_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: RSA-OAEP
                    example:
                      - RSA-OAEP
                      - RSA-OAEP-256
                      - RSA1_5
                  id_token_encryption_enc_values_supported:
                    type: array
                    items:
                      type: string
                      example: A256GCM
                    example:
                      - A256GCM
                      - A192GCM
                      - A128GCM
                      - A128CBC-HS256
                      - A192CBC-HS384
                      - A256CBC-HS512
                  id_token_signing_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: PS384
                    example:
                      - PS384
                      - ES384
                      - RS384
                      - HS256
                      - HS512
                      - ES256
                      - RS256
                      - HS384
                      - ES512
                      - PS256
                      - PS512
                      - RS512
                  introspection_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/token/introspect
                  introspection_endpoint_auth_methods_supported:
                    type: array
                    items:
                      type: string
                      example: private_key_jwt
                    example:
                      - private_key_jwt
                      - client_secret_basic
                      - client_secret_post
                      - tls_client_auth
                      - client_secret_jwt
                  introspection_endpoint_auth_signing_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: PS384
                    example:
                      - PS384
                      - ES384
                      - RS384
                      - HS256
                      - HS512
                      - ES256
                      - RS256
                      - HS384
                      - ES512
                      - PS256
                      - PS512
                      - RS512
                  issuer:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa
                  jwks_uri:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/certs
                  mtls_endpoint_aliases:
                    type: object
                    properties:
                      backchannel_authentication_endpoint:
                        type: string
                        example: >-
                          https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/ext/ciba/auth
                      device_authorization_endpoint:
                        type: string
                        example: >-
                          https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/auth/device
                      introspection_endpoint:
                        type: string
                        example: >-
                          https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/token/introspect
                      pushed_authorization_request_endpoint:
                        type: string
                        example: >-
                          https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/ext/par/request
                      registration_endpoint:
                        type: string
                        example: >-
                          https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/clients-registrations/openid-connect
                      revocation_endpoint:
                        type: string
                        example: >-
                          https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/revoke
                      token_endpoint:
                        type: string
                        example: >-
                          https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/token
                      userinfo_endpoint:
                        type: string
                        example: >-
                          https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/userinfo
                  pushed_authorization_request_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/ext/par/request
                  registration_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/clients-registrations/openid-connect
                  request_object_encryption_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: RSA-OAEP
                    example:
                      - RSA-OAEP
                      - RSA-OAEP-256
                      - RSA1_5
                  request_object_encryption_enc_values_supported:
                    type: array
                    items:
                      type: string
                      example: A256GCM
                    example:
                      - A256GCM
                      - A192GCM
                      - A128GCM
                      - A128CBC-HS256
                      - A192CBC-HS384
                      - A256CBC-HS512
                  request_object_signing_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: PS384
                    example:
                      - PS384
                      - ES384
                      - RS384
                      - HS256
                      - HS512
                      - ES256
                      - RS256
                      - HS384
                      - ES512
                      - PS256
                      - PS512
                      - RS512
                      - none
                  request_parameter_supported:
                    type: boolean
                    example: true
                  request_uri_parameter_supported:
                    type: boolean
                    example: true
                  require_pushed_authorization_requests:
                    type: boolean
                    example: false
                  require_request_uri_registration:
                    type: boolean
                    example: true
                  response_modes_supported:
                    type: array
                    items:
                      type: string
                      example: query
                    example:
                      - query
                      - fragment
                      - form_post
                      - query.jwt
                      - fragment.jwt
                      - form_post.jwt
                      - jwt
                  response_types_supported:
                    type: array
                    items:
                      type: string
                      example: code
                    example:
                      - code
                      - none
                      - id_token
                      - token
                      - id_token token
                      - code id_token
                      - code token
                      - code id_token token
                  revocation_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/revoke
                  revocation_endpoint_auth_methods_supported:
                    type: array
                    items:
                      type: string
                      example: private_key_jwt
                    example:
                      - private_key_jwt
                      - client_secret_basic
                      - client_secret_post
                      - tls_client_auth
                      - client_secret_jwt
                  revocation_endpoint_auth_signing_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: PS384
                    example:
                      - PS384
                      - ES384
                      - RS384
                      - HS256
                      - HS512
                      - ES256
                      - RS256
                      - HS384
                      - ES512
                      - PS256
                      - PS512
                      - RS512
                  scopes_supported:
                    type: array
                    items:
                      type: string
                      example: openid
                    example:
                      - openid
                      - phone
                      - token-exchange
                      - profile
                      - microprofile-jwt
                      - address
                      - offline_access
                      - email
                      - roles
                      - token_exchange_scope
                      - web-origins
                  subject_types_supported:
                    type: array
                    items:
                      type: string
                      example: public
                    example:
                      - public
                      - pairwise
                  tls_client_certificate_bound_access_tokens:
                    type: boolean
                    example: true
                  token_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/token
                  token_endpoint_auth_methods_supported:
                    type: array
                    items:
                      type: string
                      example: private_key_jwt
                    example:
                      - private_key_jwt
                      - client_secret_basic
                      - client_secret_post
                      - tls_client_auth
                      - client_secret_jwt
                  token_endpoint_auth_signing_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: PS384
                    example:
                      - PS384
                      - ES384
                      - RS384
                      - HS256
                      - HS512
                      - ES256
                      - RS256
                      - HS384
                      - ES512
                      - PS256
                      - PS512
                      - RS512
                  userinfo_encryption_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: RSA-OAEP
                    example:
                      - RSA-OAEP
                      - RSA-OAEP-256
                      - RSA1_5
                  userinfo_encryption_enc_values_supported:
                    type: array
                    items:
                      type: string
                      example: A256GCM
                    example:
                      - A256GCM
                      - A192GCM
                      - A128GCM
                      - A128CBC-HS256
                      - A192CBC-HS384
                      - A256CBC-HS512
                  userinfo_endpoint:
                    type: string
                    example: >-
                      https://idp.gondor-grootan-kc19-qa-h7sul.gondor.dev.kobil.com/auth/realms/astqa/protocol/openid-connect/userinfo
                  userinfo_signing_alg_values_supported:
                    type: array
                    items:
                      type: string
                      example: PS384
                    example:
                      - PS384
                      - ES384
                      - RS384
                      - HS256
                      - HS512
                      - ES256
                      - RS256
                      - HS384
                      - ES512
                      - PS256
                      - PS512
                      - RS512
                      - none
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
  /realms/{tenantId}/v3_client/secret/{clientId}:
    get:
      tags:
        - Apps (Client)
      summary: Get App Credentials
      description: Get App Credentials API will return a the data that match the given parameters.
      responses:
        '200':
          description: App credential fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App credential fetched successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 2 indicates APP releated APIs.
                  data:
                    type: string
                    example: 77581f16-2887-4d60-9346-0f3b6693063a
                    description : The client secret, generated during app creation.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description:   App does not exist
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/GetAppCredentialsNotFoundResponse1'
                  - $ref: '#/definitions/GetAppCredentialsNotFoundResponse2'
        '500':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get/update App secretCaused by null
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Internal Server Error
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 2 indicates APP releated APIs.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: clientId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Client ID.
    post:
      tags:
        - Apps (Client)
      summary: Regenerate App Credential
      description: Regenerate App Credential API will return the data that match the given parameters.
      parameters:
        - name: clientId
          in: query
          required: true
          schema:
            type: string
            example: '{{appname}}'
      responses:
        '200':
          description: App credential regenerated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App credential regenerated successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description: Subsystem 2 indicates app-related API's.
                  data:
                    type: string
                    example: 67e3127b-b173-4780-8033-1fecfd35d397
                    description: Regenerated Credential
        '500':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get/update App secretCaused by null
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Internal Server Error
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description : Subsystem 2 indicates APP releated APIs.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: App does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: App does not exist
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 2
                    description : Subsystem 2 indicates APP releated APIs.
      security:
        - BearerAuth: []
  /realms/{tenantId}/v4_otp/{userId}:
    post:
      tags:
        - OTP
      summary: Send OTP
      description: Using this API, OTP can be sent via SMS or Email.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: '123456'
                  description :  Code can customised to personalize the OTP; otherwise, a code will be generated automatically.
                codeLength:
                  type: number
                  example: 6
                  description : When not providing a custom code, set the desired code length (integer).
                codeType:
                  type: string
                  example: NUMERIC
                  description : If codeLength is set, choose the code type as "NUMERIC," "ALPHANUMERIC," or "ALPHANUMERIC_WITH_SPECIAL_CHARACTERS."
                codeValidity:
                  type: string
                  example: 1m
                  description : Set the OTP's validity period using a format like "2m" for 2 minutes; the default validity is 5 minutes.
                deliverViaInternalProvider:
                  type: boolean
                  example: true
                  description : If set to "true," the OTP will be sent using an internal provider by default; if set to "false," the OTP won't be sent to the user but will be stored exclusively by the Identity Provider (IDP).
                type:
                  type: string
                  example: SMS
                  description : Specify the message type by setting this parameter as either "SMS" or "EMAIL.
            examples:
              Send OTP:
                value:
                  code: '123456'
                  codeLength: 6
                  codeType: NUMERIC
                  codeValidity: 1m
                  deliverViaInternalProvider: true
                  type: SMS
      responses:
        '200':
          description: OTP sent to the user successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OTP sent to the user successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 9 indicates user-related APIs.
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User dosen't have phone number
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: Not Found
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates OTP-related APIs.
        default:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message explains result of the API call.
                  status:
                    type: string
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem  5 indicates user-related APIs.
      security:
        - BearerAuth: []

    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the UserID.

  /realms/{tenantId}/v4_otp/{userId}/verify:
    post:
      tags:
        - OTP
      summary: Verify OTP
      description: Using this API, SMS or Email OTP can be verified.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: OTP verified successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OTP verified successfully
                    description: Message explains result of the API call.
                  status:
                    type: string
                    example: OK
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem 5 indicates user-related APIs.
        '403':
          description: OTP Expired
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/definitions/VerifyOTPForbiddenResponse1'
                  - $ref: '#/definitions/VerifyOTPForbiddenResponse2'
        '401':
          description: The request wasn't authorized due to (Invalid client credentials,Invalid user credentials or Access token expired).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: HTTP 401 Unauthorized
                    description: The error message which indicates the issue.
        default:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message explains result of the API call.
                  status:
                    type: string
                    description: The status of the API call.
                  subSystem:
                    type: number
                    example: 5
                    description: Subsystem  5 indicates user-related APIs.
      security:
        - BearerAuth: []
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          description: Configure the Realm's name.
      - name: userId
        in: path
        required: true
        schema:
          type: string
          description: Configure the user name.

definitions:
  VerifyOTPForbiddenResponse1:
    type: object
    properties:
      message:
        type: string
        example: Incorrect OTP
        description: Message explains result of the API call.
      status:
        type: string
        example: Forbidden
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  VerifyOTPForbiddenResponse2:
    type: object
    properties:
      message:
        type: string
        example: OTP Expired
        description: Message explains result of the API call.
      status:
        type: string
        example: Forbidden
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.

  AuthorizationCode:
    type: object
    properties:
      client_id:
        type: string
        example: '{{Admin-Client}}'
        description: The Client ID for which the access token is to be generated. NOTE - Make sure the Service Accounts Enabled option is switched to ON for the respective client.
      client_secret:
        type: string
        example: ''
        description: Secret corresponding to the given clientID. Secret will be available only for the clients with access type selected confidential during client creation. This is an optional parameter.
      grant_type:
        type: string
        example: password
        description: The grant type should be client_credentials.
      password:
        type: string
        example: '{{Admin-userPSW}}'
        description: Password corresponding to the username.
      scope:
        type: string
        example: kobil_password
        description: The scope requested for the token.
      username:
        type: string
        example: '{{UserID}}'
        description:   The username for which the token needs to be generated.
  ClientCredentials:
    type: object
    properties:
      grant_type:
        type: string
        example: client_credentials
        description: The grant type should be client_credentials.
      client_id:
        type: string
        example: test
        description: The Client ID for which the access token is to be generated. NOTE- Make sure the Service Accounts Enabled option is switched to ON for the respective client.
      client_secret:
        type: string
        example: 8fe1fdd-1904-48ab-b0f7-15bf9aa1a41a
        description: Secret corresponding to the given clientID. Secret will be available only for the clients with access type selected confidential during client creation. This is an optional parameter.
  Password:
    type: object
    properties:
      grant_type:
        type: string
        example: password
        description: The grant type should be client_credentials.
      username:
        type: string
        example: demouser
        description: The username for which the token needs to be generated.
      password:
        type: string
        example: password
        description: Password corresponding to the username.
      client_id:
        type: string
        example: demo
        description:   The Client ID for which the access token is to be generated.
      client_secret:
        type: string
        example: 4d759a23-e01d-4902-8727-98
        description: Secret corresponding to the given clientID. Secret will be available only for the clients with access type selected confidential during client creation. This is an optional parameter.
  RefreshToken:
    type: object
    properties:
      grant_type:
        type: string
        example: refresh_token
        description: "Grant Type should set to refresh_token."
      refresh_token:
        type: string
        example: eyJhbGc
        description: The refresh token to be used. Use any one of the methods listed under Create Access Token to get the refresh token.
      client_id:
        type: string
        example: test
        description:   The refresh token will be generated for the given client.
  DeleteAddressNotFoundException:
    type: object
    properties:
      message:
        type: string
        example: Error occurred while deleting the address.
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found.
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  DeleteAddressNotFoundResponse:
    type: object
    properties:
      message:
        type: string
        example: Invalid addressID
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found.
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  EditAddressNotFoundResponse:
    type: object
    properties:
      message:
        type: string
        example: Invalid addressID
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description :   The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  EditAddressNotFoundException:
    type: object
    properties:
      message:
        type: string
        example: Error occurred in address change.
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description :   The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  GetAddressNotFoundResponse:
    type: object
    properties:
      message:
        type: string
        example: Address Not Found!
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  GetAddressNotFoundException:
    type: object
    properties:
      message:
        type: string
        example: Error occurred while get the user address.
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  GetUsersBasedOnRoleNotFoundResponse1:
    type: object
    properties:
      message:
        type: string
        example: Role does not exist
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  GetUsersBasedOnRoleNotFoundResponse2:
    type: object
    properties:
      message:
        type: string
        example: User does not exist
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
      data:
        type: string
        example: User does not exist
        description: ''
  GetUsersBasedOnClientRoleNotFoundResponse:
    type: object
    properties:
      message:
        type: string
        example: App does not exist
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description : The status of the API call.
      subSystem:
        type: number
        example: 2
        description : Subsystem 2 indicates app-related API's.
  ListAdminUsersOkResponse1:
    type: object
    properties:
      message:
        type: "string"
        example: "Admin users fetched successfully"
        description : Message explains result of the API call.
      status:
        type: "string"
        example: "OK"
        description : The status of the API call.
      subSystem:
        type: "number"
        example: 5
        description : Subsystem 5 indicates user-related API's.

      data:
        type: "array"
        items:
          type: "object"
          properties:
            username:
              type: "string"
              example: "1"
            id:
              type: "string"
              example: "31ad4937-4cf1-4e97-a6fe-440b9156d92a"
            createdTimestamp:
              type: "number"
              example: 1709533258078
            enabled:
              type: "boolean"
              example: false
            emailVerified:
              type: "boolean"
              example: false
            attributes:
              properties:
                firstName:
                  type: "string"
                  items:
                    type: "bob"
                  example:
                    - bob
                  description: First name of the user.
                lastName:
                  type: "array"
                  items:
                    type: "null"
                  example:
                    - null
                asd:
                  type: "array"
                  items:
                    type: "string"
                  example:
                    - "asd"
                email:
                  type: "array"
                  items:
                    type: "null"
                  example:
                    - null
                username:
                  type: "array"
                  items:
                    type: "string"
                  example:
                    - "1"
              type: "object"
            requiredActions:
              type: "array"
              items:
                type: "string"
              example:
                - "kobil-email-registration-required-action"
            admin:
              type: "boolean"
              example: true
  ListAdminUsersOkResponse2:
    type: object
    properties:
      message:
        type: string
        example: Admin users not available
        description : Message explains result of the API call.
      status:
        type: string
        example: OK
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
      data:
        type: string
        example: No results found
        description: ''
  AddUserGroupBadRequestResponse:
    type: object
    properties:
      message:
        type: string
        example: Invalid Request
        description : Message explains result of the API call.
      status:
        type: string
        example: INVALID_REQUEST
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  AddUserGroupBadRequestException:
    type: object
    properties:
      message:
        type: string
        example: Failed to add user in user groupCaused by null
        description : Message explains result of the API call.
      status:
        type: string
        example: GENERAL_ERROR
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  AddUserGroupUserNotfoundResponse:
    type: object
    properties:
      message:
        type: string
        example: "User does not exist"
        description: Message explains result of the API call.
      status:
        type: string
        example: USER_NOT_FOUND
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related API's.
  AddUserGroupGroupNotfoundResponse:
    type: object
    properties:
      message:
        type: string
        example: "Group does not exist : {groupnames}"
        description: Message explains result of the API call.
      status:
        type: string
        example: GROUP_NOT_FOUND
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related API's.
  DeleteUserGroupUserNotfoundResponse:
    type: object
    properties:
      message:
        type: string
        example: "User does not exist"
        description: Message explains result of the API call.
      status:
        type: string
        example: USER_NOT_FOUND
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related API's.
  DeleteUserGroupGroupNotfoundResponse:
    type: object
    properties:
      message:
        type: string
        example: "Group does not exist : {groupnames}"
        description: Message explains result of the API call.
      status:
        type: string
        example: GROUP_NOT_FOUND
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related API's.
  DeleteUserGroupBadRequestResponse:
    type: object
    properties:
      message:
        type: string
        example: Invalid Request
        description : Message explains result of the API call.
      status:
        type: string
        example: INVALID_REQUEST
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  DeleteUserGroupBadRequestException:
    type: object
    properties:
      message:
        type: string
        example: Failed to remove user from user groupCaused by null
        description : Message explains result of the API call.
      status:
        type: string
        example: GENERAL_ERROR
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  UnlockAllUsersOtpBruteForceOkresponse1:
    type: object
    properties:
      message:
        type: string
        example: Resend OTP Brute force feature is currently disabled for tenant
        description : Message explains result of the API call.
      status:
        type: string
        example: OK
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  UnlockAllUsersOtpBruteForceOkresponse2:
    type: object
    properties:
      message:
        type: string
        example: All users unlocked from Resend OTP brute force successfully
        description : Message explains result of the API call.
      status:
        type: string
        example: OK
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  UnlockUserOtpBruteForceOkResponse1:
    type: object
    properties:
      message:
        type: string
        example: User unlocked from Resend OTP brute force successfully
        description : Message explains result of the API call.
      status:
        type: string
        example: OK
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  UnlockUserOtpBruteForceOkResponse2:
    type: object
    properties:
      message:
        type: string
        example: Resend OTP Brute force feature is currently disabled for tenant
        description : Message explains result of the API call.
      status:
        type: string
        example: OK
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  GetOtpBruteforceStatusOkResponse1:
    type: object
    properties:
      message:
        type: string
        example: Resend OTP Brute force feature is currently disabled for tenant
        description : Message explains result of the API call.
      status:
        type: string
        example: OK
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
  GetOtpBruteforceStatusOkResponse2:
    type: object
    properties:
      message:
        type: string
        example: User Resend Otp brute force status fetched successfully
        description : Message explains result of the API call.
      status:
        type: string
        example: OK
        description : The status of the API call.
      subSystem:
        type: number
        example: 5
        description : Subsystem 5 indicates user-related API's.
      data:
        type: object
        properties:
          numFailures:
            type: number
            example: 0
          otpDisabled:
            type: boolean
          userId:
            type: string
            example: test
          lastIPFailure:
            type: string
            example: n/a
          lastFailure:
            type: number
            example: 0
  SMTPConfigurationBadRequestResponse1:
    type: object
    properties:
      message:
        type: string
        example: Host and From is mandatory to update Email Configuration
      status:
        type: string
        example: Bad Request
        description : The status of the API call.
      subSystem:
        type: number
        example: 1
        description: Subsystem 1 indicates Tenant-related APIs.
  SMTPConfigurationBadRequestResponse2:
    type: object
    properties:
      message:
        type: string
        example: Failed to update SMTP Details
        description : Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description : The status of the API call.
      subSystem:
        type: number
        example: 1
        description: Subsystem 1 indicates Tenant-related APIs.
  SMTPConfigurationBadRequestResponse3:
    type: object
    properties:
      message:
        type: string
        example: user and password fields are mandatory to Enable Authentication in Email Configuration
        description : Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description : The status of the API call.
      subSystem:
        type: number
        example: 1
        description: Subsystem 1 indicates Tenant-related APIs.
  SMTPConfigurationBadRequestResponse4:
    type: object
    properties:
      message:
        type: string
        example: Failed to update SMTP DetailsCaused by null
        description : Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description : The status of the API call.
      subSystem:
        type: number
        example: 1
        description: Subsystem 1 indicates Tenant-related APIs.
  UMAAppConflictResponse1:
    type: object
    properties:
      message:
        type: string
        example: User already exist
        description : Message explains result of the API call.
      status:
        type: string
        example: Conflict
        description : The status of the API call.
      subSystem:
        type: number
        example: 2
        description: Subsystem 2 indicates App-related APIs.
  UMAAppConflictResponse2:
    type: object
    properties:
      message:
        type: string
        example: App already exists
        description : Message explains result of the API call.
      status:
        type: string
        example: Conflict
        description : The status of the API call.
      subSystem:
        type: number
        example: 2
        description: Subsystem 2 indicates App-related APIs.
  DeleteAppInternalServerErrorResponse1:
    type: object
    properties:
      message:
        type: string
        example: Failed to delete AppCaused by null
        description : Message explains result of the API call.
      status:
        type: string
        example: Internal Server Error
        description : The status of the API call.
      subSystem:
        type: number
        example: 2
        description: Subsystem 2 indicates App-related APIs.
  DeleteAppInternalServerErrorResponse2:
    type: object
    properties:
      message:
        type: string
        example: Failed to delete App
        description : Message explains result of the API call.
      status:
        type: string
        example: Internal Server Error
        description : The status of the API call.
      subSystem:
        type: number
        example: 2
        description: Subsystem 2 indicates App-related APIs.
  GetAppCredentialsNotFoundResponse1:
    type: object
    properties:
      message:
        type: string
        example: App does not exist
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description : The status of the API call.
      subSystem:
        type: number
        example: 2
        description: Subsystem 2 indicates App-related APIs.
  GetAppCredentialsNotFoundResponse2:
    type: object
    properties:
      message:
        type: string
        example: Failed to get App secret
        description : Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description : The status of the API call.
      subSystem:
        type: number
        example: 2
        description: Subsystem 2 indicates App-related APIs.
  CreateAppBadRequestResponse1:
    type: object
    properties:
      message:
        type: string
        example: App name should not be null or empty
        description: Message explains result of the API call.
      status:
        type: string
        description: The status of the API call.
        example: BAD_REQUEST
      subbSystem:
        type: number
        example: 2
        description : Subsystem 2 indicates APP releated APIs.
  CreateAppBadRequestResponse2:
    type: object
    properties:
      message:
        type: string
        example: Failed to create App Caused by null
        description: Message explains result of the API call.
      status:
        type: string
        description: The status of the API call.
        example: BAD_REQUEST
      subbSystem:
        type: number
        example: 2
        description : Subsystem 2 indicates APP releated APIs.
  CreateRiskBitsConflictResponse1:
    type: object
    properties:
      message:
        type: string
        example: Riskbit already exists
        description: Message explains result of the API call.
      status:
        type: string
        example: Conflict
        description: The status of the API call.
      subSystem:
        type: number
        example: 1
        description: Subsystem 1 indicates tenant-related API's.
  CreateRiskBitsConflictResponse2:
    type: object
    properties:
      message:
        type: string
        example: Riskbit wtih given id is already present
        description: Message explains result of the API call.
      status:
        type: string
        example: Conflict
        description: The status of the API call.
      subSystem:
        type: number
        example: 1
        description: Subsystem 1 indicates tenant-related API's.
  SendMagicLinkNotFoundResponse1:
    type: object
    properties:
      message:
        type: string
        example: User is not present, Please try again.
        description: Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMagicLinkNotFoundResponse2:
    type: object
    properties:
      message:
        type: string
        example: User is not enabled, Please enable user.
        description: Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  TestSMTPConfigurationBadRequestResponse1:
    type: object
    properties:
      message:
        type: string
        example: Failed to send Mail
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  TestSMTPConfigurationBadRequestResponse2:
    type: object
    properties:
      message:
        type: string
        example: User is not associated with any E-mail Id.
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  TestSMTPConfigurationBadRequestResponse3:
    type: object
    properties:
      message:
        type: string
        example: User is disabled
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  TestSMTPConfigurationBadRequestResponse4:
    type: object
    properties:
      message:
        type: string
        example: Failed to send MailCaused by null
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendEmailNotFoundResponse1:
    type: object
    properties:
      message:
        type: string
        example: User does not exist
        description: Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendEmailNotFoundResponse2:
    type: object
    properties:
      message:
        type: string
        example: SMTP configurations are missing
        description: Message explains result of the API call.
      status:
        type: string
        example: Not Found
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMailBadRequestResponse1:
    type: object
    properties:
      message:
        type: string
        example: Failed to send Mail
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMailBadRequestResponse2:
    type: object
    properties:
      message:
        type: string
        example: One or more required actions specified is invalid
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMailBadRequestResponse3:
    type: object
    properties:
      message:
        type: string
        example: User is disabled
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMailBadRequestResponse4:
    type: object
    properties:
      message:
        type: string
        example: User is not associated with any E-mail Id.
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMailBadRequestResponse5:
    type: object
    properties:
      message:
        type: string
        example: Mail type or text body is required
        description: Message explains result of the API call.
      status:
        type: string
        example: Bad Request
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMailOKResponse1:
    type: object
    properties:
      message:
        type: string
        example: Mail Sent Successfully to the user
        description: Message explains result of the API call.
      status:
        type: string
        example: OK
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMailOKResponse2:
    type: object
    properties:
      message:
        type: string
        example: Email already verified
        description: Message explains result of the API call.
      status:
        type: string
        example: OK
        description: The status of the API call.
      subSystem:
        type: number
        example: 5
        description: Subsystem 5 indicates user-related APIs.
  SendMailRequestBody1:
    type: object
    properties:
      mailType:
        type: string
        example: WELCOME
        description: Specify the mail type for template. Value should be "WELCOME"
      iosLink:
        type: string
        example: https://xxxx.xxx.com
        description: Specify the iOS link.
      androidLink:
        type: string
        example: https://xxxx.xxx.com
        description: Specify Android link.
      portalUrl:
        type: string
        example: https://xxxx.xxx.com
        description: Specify the Portal access URL.
  SendMailRequestBody2:
    type: object
    properties:
      mailType:
        type: string
        example: TENANT_INFO
      tenantName:
        type: string
        example: xxx_tenant
      userName:
        type: string
        example: xx_user
      portalUrl:
        type: string
        example: https://xxxx.portal.com
  SendMailRequestBody3:
    type: object
    properties:
      mailType:
        type: string
        example: VERIFY
      redirectUri:
        type: string
        example: https://xxxx.xxx.xxxx.test.xxxx.com/
      appName:
        type: string
        example: account
      portalUrl:
        type: string
        example: https://xxxx.xxx.com
      supportEmail:
        type: string
        example: xxxsupport@xxx.com
  SendMailRequestBody4:
    type: object
    properties:
      mailType:
        type: string
        example: FORGOT_PASSWORD
      redirectUri:
        type: string
        example: https://xxxx.xxx.xxxx.test.xxxx.com/
      appName:
        type: string
        example: account
      supportEmail:
        type: string
        example: xxxsupport@xxx.com
  GetRealmCreationStatusOkResponse1:
    type: object
    properties:
      message:
        type: string
        example: Tenant status fetched successfully
      status:
        type: string
        example: OK
      subSystem:
        type: number
        example: 1
      data:
        type: object
        properties:
          status:
            type: string
            example: BLOCKED
          iamStatus:
            type: string
            example: SUCCESS
          signerCertStatus:
            type: string
            example: BLOCKED
          identityUserCertStatus:
            type: object
            properties:
              externalIdentityUser:
                type: object
                properties:
                  authentication:
                    type: string
                    example: BLOCKED
                  encryption:
                    type: string
                    example: BLOCKED
                  signature:
                    type: string
                    example: BLOCKED
              internalIdentityUser:
                type: object
                properties:
                  authentication:
                    type: string
                    example: BLOCKED
                  encryption:
                    type: string
                    example: BLOCKED
                  signature:
                    type: string
                    example: BLOCKED
  GetRealmCreationStatusOkResponse2:
    type: object
    properties:
      message:
        type: string
        example: Tenant status not applicable
      status:
        type: string
        example: OK
      subSystem:
        type: number
        example: 1


















components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Authorization
  - name: Users
  - name: Email
  - name: Apps (Client)
  - name: Magic link
